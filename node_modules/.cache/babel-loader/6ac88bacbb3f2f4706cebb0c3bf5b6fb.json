{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\weather\\\\weather.js\";\nimport React, { useEffect, useRef } from 'react';\nimport Chartjs from 'chart.js';\nconst chartConfig = {\n  type: 'bar',\n  data: {// ...\n  },\n  options: {// ...\n  }\n};\n\nconst Chart = () => {\n  const chartContainer = useRef(null);\n  const [chartInstance, setChartInstance] = useState(null);\n  useEffect(() => {\n    if (chartContainer && chartContainer.current) {\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\n      setChartInstance(newChartInstance);\n    }\n  }, [chartContainer]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    ref: chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/weather/weather.js"],"names":["React","useEffect","useRef","Chartjs","chartConfig","type","data","options","Chart","chartContainer","chartInstance","setChartInstance","useState","current","newChartInstance"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,UAApB;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,IAAI,EAAE,KADY;AAElBC,EAAAA,IAAI,EAAE,CACJ;AADI,GAFY;AAKlBC,EAAAA,OAAO,EAAE,CACP;AADO;AALS,CAApB;;AAUA,MAAMC,KAAK,GAAG,MAAM;AAClB,QAAMC,cAAc,GAAGP,MAAM,CAAC,IAAD,CAA7B;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCC,QAAQ,CAAC,IAAD,CAAlD;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,cAAc,IAAIA,cAAc,CAACI,OAArC,EAA8C;AAC5C,YAAMC,gBAAgB,GAAG,IAAIX,OAAJ,CAAYM,cAAc,CAACI,OAA3B,EAAoCT,WAApC,CAAzB;AACAO,MAAAA,gBAAgB,CAACG,gBAAD,CAAhB;AACD;AACF,GALQ,EAKN,CAACL,cAAD,CALM,CAAT;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,GAAG,EAAEA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAhBD;;AAkBA,eAAeD,KAAf","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chartjs from 'chart.js';\r\n\r\nconst chartConfig = {\r\n  type: 'bar',\r\n  data: {\r\n    // ...\r\n  },\r\n  options: {\r\n    // ...\r\n  }\r\n};\r\n\r\nconst Chart = () => {\r\n  const chartContainer = useRef(null);\r\n  const [chartInstance, setChartInstance] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (chartContainer && chartContainer.current) {\r\n      const newChartInstance = new Chartjs(chartContainer.current, chartConfig);\r\n      setChartInstance(newChartInstance);\r\n    }\r\n  }, [chartContainer]);\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={chartContainer} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}