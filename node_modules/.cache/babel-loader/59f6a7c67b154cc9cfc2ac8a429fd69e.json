{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\routes\\\\newRouteCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './newStyle.css';\n\nconst Route = ({\n  title,\n  waterLevel,\n  duration,\n  cost,\n  learn,\n  pic,\n  setRoute,\n  waterLevelSetting,\n  subtitle\n}) => {\n  const [waterLevelAPI, setWaterLevel] = useState(null); //getting waterlevel data\n\n  const url = `https://waterservices.usgs.gov/nwis/iv/?format=json&sites=0${waterLevel}&parameterCd=00065&siteStatus=all`;\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(url);\n      const data = await response.json();\n      const waterLevelStat = data.value.timeSeries[0].values[0].value[0].value;\n      setWaterLevel(waterLevelStat);\n    }\n\n    getData();\n  }, []); //rendering waterlevel data and style\n\n  let renderWaterLevel = null;\n  let boxClass = null;\n  let clickFunction = null;\n  let buttonName = 'Book';\n\n  if (waterLevelAPI === null) {\n    renderWaterLevel = null;\n    boxClass = 'text';\n    buttonName = 'Book';\n    console.log(pic);\n\n    clickFunction = () => {\n      setRoute(title);\n    };\n  } else {\n    if (waterLevelSetting > waterLevelAPI) {\n      boxClass = 'too-low';\n      buttonName = 'Not Enough Water';\n      clickFunction = null;\n    } else {\n      boxClass = 'text';\n\n      clickFunction = () => {\n        setRoute(title);\n      };\n    }\n\n    renderWaterLevel = waterLevelAPI;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    onClick: clickFunction,\n    className: \"booking-card\",\n    style: {\n      backgroundImage: `url(${pic})`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"book-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: clickFunction,\n    className: \"btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, buttonName))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"informations-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"map-marker-alt\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 39\n    }\n  }), \" \", title), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, subtitle), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"more-information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info-and-date-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"box info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"dollar\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }), \" \", cost), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"clock\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 29\n    }\n  }), \" \", duration, \" hrs\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"water\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }), \" \", waterLevelAPI, \" ft\"))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"disclaimer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, \"disclaimer\")))));\n};\n\nexport default Route;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/routes/newRouteCard.js"],"names":["React","useEffect","useState","Card","Col","Row","FontAwesomeIcon","Route","title","waterLevel","duration","cost","learn","pic","setRoute","waterLevelSetting","subtitle","waterLevelAPI","setWaterLevel","url","getData","response","fetch","data","json","waterLevelStat","value","timeSeries","values","renderWaterLevel","boxClass","clickFunction","buttonName","console","log","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './newStyle.css';\r\n\r\n\r\n\r\n\r\nconst Route = ({title, waterLevel, duration, cost, learn, pic, setRoute, waterLevelSetting, subtitle}) => {\r\n\r\n    const [waterLevelAPI, setWaterLevel] = useState(null);\r\n\r\n\r\n    //getting waterlevel data\r\n    const url = `https://waterservices.usgs.gov/nwis/iv/?format=json&sites=0${waterLevel}&parameterCd=00065&siteStatus=all`\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const waterLevelStat = data.value.timeSeries[0].values[0].value[0].value\r\n            setWaterLevel(waterLevelStat)\r\n        }\r\n        getData();\r\n    },[])\r\n\r\n\r\n    //rendering waterlevel data and style\r\n    let renderWaterLevel = null\r\n    let boxClass = null\r\n    let clickFunction = null\r\n    let buttonName = 'Book'\r\n    if(waterLevelAPI === null) {\r\n        renderWaterLevel = (null)\r\n        boxClass = 'text'\r\n        buttonName = 'Book'\r\n        console.log(pic)\r\n        clickFunction = (\r\n            () => {setRoute(title)}\r\n        )\r\n    }   else {\r\n        if(waterLevelSetting > waterLevelAPI) {\r\n            boxClass = 'too-low'\r\n            buttonName = 'Not Enough Water'\r\n            clickFunction = (null)\r\n        }else {\r\n            boxClass = 'text'\r\n            clickFunction = (\r\n                () => {setRoute(title)}\r\n            )\r\n        }\r\n        renderWaterLevel = waterLevelAPI\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n            <li onClick={clickFunction} className=\"booking-card\" style={{backgroundImage: `url(${pic})`}} >\r\n                <div className=\"book-container\">\r\n                <div className=\"content\">\r\n                    <button onClick={clickFunction} className=\"btn\">{buttonName}</button>\r\n                </div>\r\n                </div>\r\n                <div className=\"informations-container\">\r\n                <h2 className=\"title\"><FontAwesomeIcon icon=\"map-marker-alt\"  size=\"1x\" /> {title}</h2>\r\n                <p className=\"sub-title\">{subtitle}</p>\r\n                <div className=\"more-information\">\r\n\r\n\r\n                    <div className=\"info-and-date-container\">\r\n                    <div className=\"box info\">\r\n                        <h6><FontAwesomeIcon icon=\"dollar\"  size=\"1x\" /> {cost}</h6>\r\n                        <h6><FontAwesomeIcon icon=\"clock\"  size=\"1x\" /> {duration} hrs</h6>\r\n                        <h6><FontAwesomeIcon icon=\"water\"  size=\"1x\" /> {waterLevelAPI} ft</h6>\r\n                    </div>\r\n                    </div>\r\n                    <p className=\"disclaimer\">disclaimer</p>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Route;"]},"metadata":{},"sourceType":"module"}