{"ast":null,"code":"export default function renderKayaks(value, stock, booked) {\n  const stockOfKayaks = stock;\n  console.log(booked); //   let kayaksOptions = null\n  //   //rendering nonBooked days\n  //   let renderKayaksOptions = []\n  //   for (let i = 0; i < kayaksInStock + 1; i++){\n  //     renderKayaksOptions.push(i)\n  //     kayaksOptions = renderKayaksOptions.map(x=> (<option>{x}</option>))\n  //   }\n  //   //rendering booked days\n  //   let datesBookArray = []\n  //   let kayaksLeft = null\n  //   let kayaksLeftArray = []\n  //   const reducer = (accumulator, currentValue) => accumulator + currentValue;\n  //     //when day is selected\n  //     kayaks.forEach(booking => {\n  //         if (value.isSame(booking.date, 'day') ) {\n  //             let parsedKayaks = JSON.parse(booking.numOfKayaks)\n  //             datesBookArray.push(parsedKayaks)\n  //             if(datesBookArray.length > 1){\n  //                 // muliple bookings on single date\n  //                 let kayaksBookedTotal = datesBookArray.reduce(reducer)\n  //                 let calculatedLeft = kayaksInStock - kayaksBookedTotal\n  //                 kayaksLeft = calculatedLeft\n  //             } else if (datesBookArray.length === 1){\n  //                 // single booking on single date\n  //                 let calculatedLeft = kayaksInStock - parsedKayaks\n  //                 kayaksLeft = calculatedLeft\n  //             }\n  //         }\n  //     });\n  //     // rendering the logic from above if selected day is booked\n  //     if (!(kayaksLeft === null)){\n  //         for (let i = 0; i < kayaksLeft + 1; i++){\n  //             kayaksLeftArray.push(i)\n  //         }\n  //         kayaksOptions = kayaksLeftArray.map(x=> (<option>{x}</option>))\n  //     }\n\n  return stockOfKayaks;\n}","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/calendar/renderKayaks.js"],"names":["renderKayaks","value","stock","booked","stockOfKayaks","console","log"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4C;AAEvD,QAAMC,aAAa,GAAGF,KAAtB;AAEAG,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ,EAJuD,CAW3D;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAkBI,SAAOC,aAAP;AACH","sourcesContent":["export default function renderKayaks(value, stock, booked) {\r\n\r\n    const stockOfKayaks = stock\r\n\r\n    console.log(booked)\r\n\r\n\r\n\r\n\r\n\r\n\r\n//   let kayaksOptions = null\r\n\r\n//   //rendering nonBooked days\r\n//   let renderKayaksOptions = []\r\n//   for (let i = 0; i < kayaksInStock + 1; i++){\r\n//     renderKayaksOptions.push(i)\r\n//     kayaksOptions = renderKayaksOptions.map(x=> (<option>{x}</option>))\r\n//   }\r\n\r\n\r\n//   //rendering booked days\r\n//   let datesBookArray = []\r\n//   let kayaksLeft = null\r\n//   let kayaksLeftArray = []\r\n//   const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n//     //when day is selected\r\n//     kayaks.forEach(booking => {\r\n//         if (value.isSame(booking.date, 'day') ) {\r\n//             let parsedKayaks = JSON.parse(booking.numOfKayaks)\r\n//             datesBookArray.push(parsedKayaks)\r\n\r\n//             if(datesBookArray.length > 1){\r\n//                 // muliple bookings on single date\r\n//                 let kayaksBookedTotal = datesBookArray.reduce(reducer)\r\n//                 let calculatedLeft = kayaksInStock - kayaksBookedTotal\r\n//                 kayaksLeft = calculatedLeft\r\n\r\n//             } else if (datesBookArray.length === 1){\r\n//                 // single booking on single date\r\n//                 let calculatedLeft = kayaksInStock - parsedKayaks\r\n//                 kayaksLeft = calculatedLeft\r\n//             }\r\n//         }\r\n//     });\r\n\r\n//     // rendering the logic from above if selected day is booked\r\n//     if (!(kayaksLeft === null)){\r\n//         for (let i = 0; i < kayaksLeft + 1; i++){\r\n//             kayaksLeftArray.push(i)\r\n//         }\r\n//         kayaksOptions = kayaksLeftArray.map(x=> (<option>{x}</option>))\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return stockOfKayaks\r\n}"]},"metadata":{},"sourceType":"module"}