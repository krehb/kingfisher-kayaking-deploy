{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\routes\\\\routes.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase';\nimport './routes.css';\nimport Bird from './pic-1.jpg';\nimport Bir from './pic-2.jpg';\nimport Bi from './pic-3.jpg';\n\nfunction Routes({\n  showRoutes,\n  salt,\n  sangamon,\n  saline\n}) {\n  const salineLevel = useState({\n    level: '???'\n  });\n  const saltForkLevel = useState({\n    level: '???'\n  });\n  const sangamonLevel = useState({\n    level: '???'\n  });\n  const [routesList, setRoutes] = useState([]);\n  const database = firebase.database();\n  const ref = database.ref('routes'); //setting       water level has to be at least...\n\n  const waterLevelSetting = 1;\n  useEffect(() => {\n    ref.on('value', gotDataHandler, errDataHandler);\n  }, []);\n\n  const gotDataHandler = data => {\n    let newList = [];\n    const dataRoutes = data.val();\n    const keys = Object.keys(dataRoutes);\n\n    for (let i = 0; i < keys.length; i++) {\n      let k = keys[i];\n      const list = dataRoutes[k]; //   newList.push(list)\n\n      setRoutes(routesList => [...routesList, list]);\n    }\n  };\n\n  const errDataHandler = err => {\n    console.log('Error!');\n    console.log(err);\n  };\n\n  const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all';\n  const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all';\n  const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all';\n\n  const getDataHandler = () => {// async function getData() {\n    //     const response = await fetch(salineURL);\n    //     const responseSalt = await fetch(saltForkURL);\n    //     const responseSangamon = await fetch(sangamonURL);\n    //     const data = await response.json();\n    //     const dataSalt = await responseSalt.json();\n    //     const dataSangamon = await responseSangamon.json();\n    //     const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value\n    //     const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value\n    //     const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value\n    //     salineLevel[1]({level: salineWaterLevel})\n    //     saltForkLevel[1]({level: saltForkWaterLevel})\n    //     sangamonLevel[1]({level: sangamonWaterLevel})\n    // }\n    // getData();\n  };\n\n  const clickHandler = () => {\n    console.log(routesList[0].name);\n  };\n\n  let title = null;\n\n  if (routesList.length > 0) {\n    console.log('routes is none');\n  } else {\n    console.log(routesList);\n  }\n\n  let saltClass = 'kayaks-8';\n  let sangamonClass = 'kayaks-8';\n  let salineClass = 'kayaks-8';\n  let saltButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: salt,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 22\n    }\n  }, \"Book Trip\");\n  let sangamonButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: sangamon,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }\n  }, \"Book Trip\");\n  let salineButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: saline,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 24\n    }\n  }, \"Book Trip\");\n\n  const stylingSaltHandler = () => {\n    saltClass = 'kayaks-0';\n  };\n\n  const stylingSangamonHandler = () => {\n    sangamonClass = 'kayaks-0';\n  };\n\n  const stylingSalineHandler = () => {\n    salineClass = 'kayaks-0';\n  };\n\n  let routes = null;\n\n  if (showRoutes) {\n    if (saltForkLevel[0].level === '???') {\n      getDataHandler();\n    } //styling\n\n\n    if (waterLevelSetting > saltForkLevel[0].level) {\n      stylingSaltHandler();\n      saltButton = null;\n    }\n\n    if (waterLevelSetting > sangamonLevel[0].level) {\n      stylingSangamonHandler();\n      sangamonButton = null;\n    }\n\n    if (waterLevelSetting > salineLevel[0].level) {\n      stylingSalineHandler();\n      salineButton = null;\n    }\n\n    routes = /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      onClick: clickHandler,\n      className: \"card-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"clock\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }), \" 1-3hrs\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"dollar-sign\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 41\n      }\n    }), \" 30\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"water\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 41\n      }\n    }), \" \", saltForkLevel[0].level, \" ft\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"plus\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 41\n      }\n    }), \" Learn More\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }))))));\n  } else {\n    routes = null;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, routes);\n}\n\nexport default Routes;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/routes/routes.js"],"names":["React","useState","useEffect","Card","Container","Button","Row","Col","FontAwesomeIcon","firebase","Bird","Bir","Bi","Routes","showRoutes","salt","sangamon","saline","salineLevel","level","saltForkLevel","sangamonLevel","routesList","setRoutes","database","ref","waterLevelSetting","on","gotDataHandler","errDataHandler","data","newList","dataRoutes","val","keys","Object","i","length","k","list","err","console","log","salineURL","saltForkURL","sangamonURL","getDataHandler","clickHandler","name","title","saltClass","sangamonClass","salineClass","saltButton","sangamonButton","salineButton","stylingSaltHandler","stylingSangamonHandler","stylingSalineHandler","routes"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\nimport './routes.css';\r\nimport Bird from './pic-1.jpg';\r\nimport Bir from './pic-2.jpg';\r\nimport Bi from './pic-3.jpg';\r\n\r\nfunction Routes({showRoutes, salt, sangamon, saline}) {\r\n    \r\n    const salineLevel = useState({level: '???'})\r\n    const saltForkLevel = useState({level: '???'})\r\n    const sangamonLevel = useState({level: '???'})\r\n\r\n    const [routesList, setRoutes] = useState([])\r\n\r\n\r\n    const database = firebase.database();\r\n    const ref = database.ref('routes');\r\n\r\n    //setting       water level has to be at least...\r\n    const waterLevelSetting = 1\r\n\r\n    useEffect(() => {\r\n        ref.on('value', gotDataHandler, errDataHandler);\r\n    }, [])\r\n\r\n\r\n\r\n    const gotDataHandler = (data) => {\r\n        let newList = []\r\n        const dataRoutes = data.val();\r\n        const keys = Object.keys(dataRoutes);\r\n        for (let i = 0; i < keys.length; i ++){\r\n          let k = keys[i]\r\n          const list = dataRoutes[k]\r\n        //   newList.push(list)\r\n          setRoutes(routesList => [...routesList, list])\r\n        }      \r\n    }\r\n    const errDataHandler = (err) => {\r\n        console.log('Error!')\r\n        console.log(err)\r\n    }\r\n\r\n\r\n    const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all'\r\n    const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all'\r\n    const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all'\r\n\r\n\r\n\r\n\r\n\r\n    const getDataHandler = () => {\r\n        // async function getData() {\r\n        //     const response = await fetch(salineURL);\r\n        //     const responseSalt = await fetch(saltForkURL);\r\n        //     const responseSangamon = await fetch(sangamonURL);\r\n        //     const data = await response.json();\r\n        //     const dataSalt = await responseSalt.json();\r\n        //     const dataSangamon = await responseSangamon.json();\r\n        //     const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value\r\n        //     const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value\r\n        //     const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value\r\n        //     salineLevel[1]({level: salineWaterLevel})\r\n        //     saltForkLevel[1]({level: saltForkWaterLevel})\r\n        //     sangamonLevel[1]({level: sangamonWaterLevel})\r\n        // }\r\n    \r\n        // getData();\r\n\r\n    };\r\n\r\n    const clickHandler = () => {\r\n        console.log(routesList[0].name)\r\n    }\r\n\r\n    let title = null\r\n    if(routesList.length > 0){\r\n        console.log('routes is none')\r\n    } else {\r\n        console.log(routesList)\r\n    }\r\n\r\n    let saltClass = 'kayaks-8'\r\n    let sangamonClass = 'kayaks-8'\r\n    let salineClass = 'kayaks-8'\r\n    let saltButton = <Button onClick={salt} variant=\"primary\">Book Trip</Button>\r\n    let sangamonButton = <Button onClick={sangamon} variant=\"primary\">Book Trip</Button>\r\n    let salineButton = <Button onClick={saline} variant=\"primary\">Book Trip</Button>\r\n\r\n    const stylingSaltHandler = () => {\r\n        saltClass = 'kayaks-0'\r\n    };\r\n    const stylingSangamonHandler = () => {\r\n        sangamonClass = 'kayaks-0'\r\n    };\r\n    const stylingSalineHandler = () => {\r\n        salineClass = 'kayaks-0'\r\n    };\r\n\r\n    let routes = null\r\n    if (showRoutes){\r\n\r\n        if (saltForkLevel[0].level === '???'){\r\n            getDataHandler()\r\n        }\r\n\r\n        //styling\r\n        if (waterLevelSetting > saltForkLevel[0].level){\r\n            stylingSaltHandler()\r\n            saltButton = null\r\n        }\r\n        if (waterLevelSetting > sangamonLevel[0].level){\r\n            stylingSangamonHandler()\r\n            sangamonButton = null\r\n        }\r\n        if (waterLevelSetting > salineLevel[0].level){\r\n            stylingSalineHandler()\r\n            salineButton = null\r\n        }\r\n\r\n        \r\n        routes = (\r\n        <Container>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        {/* <Card.Img variant=\"top\" src={routeData[0].routeCards[0].img} /> */}\r\n                        <Card.Body onClick={clickHandler} className='card-1'>\r\n                            <Row>\r\n                                <Col className='text'>\r\n                                    {/* <h6><FontAwesomeIcon icon=\"map-marker-alt\"  size=\"1x\" />{title}</h6> */}\r\n                                    <h6><FontAwesomeIcon icon=\"clock\"  size=\"1x\" /> 1-3hrs</h6>\r\n                                    <h6><FontAwesomeIcon icon=\"dollar-sign\"  size=\"1x\" /> 30</h6>  \r\n                                    <h6><FontAwesomeIcon icon=\"water\"  size=\"1x\" /> {saltForkLevel[0].level} ft</h6>\r\n                                    <h6><FontAwesomeIcon icon=\"plus\"  size=\"1x\" /> Learn More</h6>\r\n                                </Col>\r\n                                <Col></Col>\r\n                                <Col></Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Col>\r\n                </Row>\r\n        </Container>)\r\n    } else { routes = null };\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {routes}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}