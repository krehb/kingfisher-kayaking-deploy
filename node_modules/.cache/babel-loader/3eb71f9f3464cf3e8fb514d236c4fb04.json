{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\routes\\\\routes.js\";\nimport React, { useState } from 'react';\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\nimport Bird from './pic-1.jpg';\nimport Bir from './pic-2.jpg';\nimport Bi from './pic-3.jpg';\n\nfunction Routes({\n  showRoutes,\n  salt,\n  sangamon,\n  saline\n}) {\n  const salineLevel = useState({\n    level: 'loading...'\n  });\n  const saltForkLevel = useState({\n    level: 'loading...'\n  });\n  const sangamonLevel = useState({\n    level: 'loading...'\n  });\n  const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all';\n  const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all';\n  const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all';\n\n  const getDataHandler = () => {\n    async function getData() {\n      const response = await fetch(salineURL);\n      const responseSalt = await fetch(saltForkURL);\n      const responseSangamon = await fetch(sangamonURL);\n      const data = await response.json();\n      const dataSalt = await responseSalt.json();\n      const dataSangamon = await responseSangamon.json();\n      const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value;\n      const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value;\n      const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value;\n      salineLevel[1]({\n        level: salineWaterLevel\n      });\n      saltForkLevel[1]({\n        level: saltForkWaterLevel\n      });\n      sangamonLevel[1]({\n        level: sangamonWaterLevel\n      });\n    }\n\n    getData();\n  };\n\n  let WaterLevel = null;\n\n  const setClassNameHandler = () => {\n    if (true) {\n      console.log('turn red');\n      WaterLevel = 'kayaks-0';\n    }\n  };\n\n  let routes = null;\n\n  if (showRoutes) {\n    if (saltForkLevel[0].level === 'loading...') {\n      getDataHandler();\n    }\n\n    if (saltForkLevel[0].level > 10) {\n      setClassNameHandler();\n    }\n\n    routes = /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: Bird,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Salt Fork\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }\n    }, \"It is a wide river that goes to Sydney\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 33\n      }\n    }, \"Water Level: \", saltForkLevel[0].level, \" ft\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: getDataHandler,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Book Trip\")))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: Bir,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    }, \"Sangamon River\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"This river is Lincoln's river\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, \"Water Level: \", saltForkLevel[0].level, \" ft\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: sangamon,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 29\n      }\n    }, \"Book Trip\")))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        width: '18rem'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: Bi,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      className: WaterLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 29\n      }\n    }, \"Saline River\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 33\n      }\n    }, \"This is the narrowest and most likly to see some cool animals\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 33\n      }\n    }, \"Water Level: \", salineLevel[0].level, \" ft\")), /*#__PURE__*/React.createElement(Button, {\n      onClick: saline,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Book Trip\"))))));\n  } else {\n    routes = null;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, routes);\n}\n\nexport default Routes;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/routes/routes.js"],"names":["React","useState","Card","Container","Button","Row","Col","Bird","Bir","Bi","Routes","showRoutes","salt","sangamon","saline","salineLevel","level","saltForkLevel","sangamonLevel","salineURL","saltForkURL","sangamonURL","getDataHandler","getData","response","fetch","responseSalt","responseSangamon","data","json","dataSalt","dataSangamon","salineWaterLevel","value","timeSeries","values","saltForkWaterLevel","sangamonWaterLevel","WaterLevel","setClassNameHandler","console","log","routes","width"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\r\nimport Bird from './pic-1.jpg';\r\nimport Bir from './pic-2.jpg';\r\nimport Bi from './pic-3.jpg';\r\n\r\nfunction Routes({showRoutes, salt, sangamon, saline}) {\r\n    \r\n    const salineLevel = useState({level: 'loading...'})\r\n    const saltForkLevel = useState({level: 'loading...'})\r\n    const sangamonLevel = useState({level: 'loading...'})\r\n\r\n    const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all'\r\n    const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all'\r\n    const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all'\r\n\r\n    const getDataHandler = () => {\r\n        async function getData() {\r\n            const response = await fetch(salineURL);\r\n            const responseSalt = await fetch(saltForkURL);\r\n            const responseSangamon = await fetch(sangamonURL);\r\n            const data = await response.json();\r\n            const dataSalt = await responseSalt.json();\r\n            const dataSangamon = await responseSangamon.json();\r\n            const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value\r\n            const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value\r\n            const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value\r\n            salineLevel[1]({level: salineWaterLevel})\r\n            saltForkLevel[1]({level: saltForkWaterLevel})\r\n            sangamonLevel[1]({level: sangamonWaterLevel})\r\n        }\r\n    \r\n        getData();\r\n    };\r\n\r\n    let WaterLevel = null\r\n    const setClassNameHandler = () => {\r\n        if(true){\r\n            console.log('turn red')\r\n            WaterLevel = 'kayaks-0'\r\n        }\r\n    };\r\n\r\n\r\n    let routes = null\r\n    if (showRoutes){\r\n\r\n        if (saltForkLevel[0].level === 'loading...'){\r\n            getDataHandler()\r\n        }\r\n\r\n        if (saltForkLevel[0].level > 10){\r\n            setClassNameHandler()\r\n        }\r\n\r\n        \r\n        routes = (\r\n        <Container>\r\n            <Row>\r\n                <Col sm={4} >\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={Bird} />\r\n                        <Card.Body>\r\n                            <Card.Title>Salt Fork</Card.Title>\r\n                            <Card.Text>\r\n                                <p>It is a wide river that goes to Sydney</p>\r\n                                <p>Water Level: {saltForkLevel[0].level} ft</p>\r\n                            </Card.Text>\r\n                            <Button onClick={getDataHandler} variant=\"primary\">Book Trip</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={Bir} />\r\n                        <Card.Body>\r\n                            <Card.Title>Sangamon River</Card.Title>\r\n                            <Card.Text>\r\n                            <p>This river is Lincoln's river</p>\r\n                            <p>Water Level: {saltForkLevel[0].level} ft</p>\r\n                            </Card.Text>\r\n                            <Button onClick={sangamon} variant=\"primary\">Book Trip</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col sm={4}>\r\n                    <Card style={{ width: '18rem' }}>\r\n                        <Card.Img variant=\"top\" src={Bi} />\r\n                        <Card.Body  className={WaterLevel}>\r\n                            <Card.Title>Saline River</Card.Title>\r\n                            <Card.Text>\r\n                                <p>This is the narrowest and most likly to see some cool animals</p>\r\n                                <p>Water Level: {salineLevel[0].level} ft</p>\r\n                            </Card.Text>\r\n                            <Button onClick={saline} variant=\"primary\">Book Trip</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>)\r\n    } else { routes = null };\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {routes}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}