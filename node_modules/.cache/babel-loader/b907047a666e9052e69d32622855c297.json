{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\weather\\\\weather.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nexport default class LineGraph extends Component {\n  constructor(...args) {\n    super(...args);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial';\n\n    async function get() {\n      const response = await fetch(url);\n      const data = await response.json();\n      console.log(data.list[0].main.temp);\n    }\n\n    get();\n    const myChartRef = this.chartRef.current.getContext(\"2d\");\n    new Chart(myChartRef, {\n      type: \"line\",\n      data: {\n        //Bring in data\n        labels: [\"Jan\", \"Feb\", \"March\"],\n        datasets: [{\n          label: \"Sales\",\n          data: [86, 67, 91]\n        }]\n      },\n      options: {//Customize chart options\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"myChart\",\n      ref: this.chartRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/weather/weather.js"],"names":["React","Component","Chart","LineGraph","chartRef","createRef","componentDidMount","url","get","response","fetch","data","json","console","log","list","main","temp","myChartRef","current","getContext","type","labels","datasets","label","options","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAGA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CG,QAD6C,GAClCJ,KAAK,CAACK,SAAN,EADkC;AAAA;;AAK7CC,EAAAA,iBAAiB,GAAG;AAEhB,UAAMC,GAAG,GAAG,gHAAZ;;AAEA,mBAAeC,GAAf,GAAqB;AAEjB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA5B;AACA,YAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAL,CAAU,CAAV,EAAaC,IAAb,CAAkBC,IAA9B;AAGH;;AAEDT,IAAAA,GAAG;AAWH,UAAMU,UAAU,GAAG,KAAKd,QAAL,CAAce,OAAd,CAAsBC,UAAtB,CAAiC,IAAjC,CAAnB;AAEA,QAAIlB,KAAJ,CAAUgB,UAAV,EAAsB;AAClBG,MAAAA,IAAI,EAAE,MADY;AAElBV,MAAAA,IAAI,EAAE;AACF;AACAW,QAAAA,MAAM,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAFN;AAGFC,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,OADX;AAEIb,UAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAFV,SADM;AAHR,OAFY;AAYlBc,MAAAA,OAAO,EAAE,CACL;AADK;AAZS,KAAtB;AAgBH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI,MAAA,EAAE,EAAC,SADP;AAEI,MAAA,GAAG,EAAE,KAAKtB,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAQH;;AA1D4C","sourcesContent":["import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n\r\n\r\nexport default class LineGraph extends Component {\r\n    chartRef = React.createRef();\r\n    \r\n    \r\n\r\n    componentDidMount() {\r\n\r\n        const url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial'\r\n\r\n        async function get() {\r\n\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n        \r\n            console.log(data.list[0].main.temp)\r\n        \r\n    \r\n        }\r\n    \r\n        get();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        \r\n        new Chart(myChartRef, {\r\n            type: \"line\",\r\n            data: {\r\n                //Bring in data\r\n                labels: [\"Jan\", \"Feb\", \"March\"],\r\n                datasets: [\r\n                    {\r\n                        label: \"Sales\",\r\n                        data: [86, 67, 91],\r\n                    }\r\n                ]\r\n            },\r\n            options: {\r\n                //Customize chart options\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n                <canvas\r\n                    id=\"myChart\"\r\n                    ref={this.chartRef}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}