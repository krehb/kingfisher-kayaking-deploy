{"ast":null,"code":"/* Copyright (c) 2013 Rod Vagg, MIT License */\nfunction AbstractChainedBatch(db) {\n  this._db = db;\n  this._operations = [];\n  this._written = false;\n}\n\nAbstractChainedBatch.prototype._checkWritten = function () {\n  if (this._written) throw new Error('write() already called on this batch');\n};\n\nAbstractChainedBatch.prototype.put = function (key, value) {\n  this._checkWritten();\n\n  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer);\n\n  if (err) throw err;\n  err = this._db._checkKeyValue(value, 'value', this._db._isBuffer);\n  if (err) throw err;\n  if (!this._db._isBuffer(key)) key = String(key);\n  if (!this._db._isBuffer(value)) value = String(value);\n  if (typeof this._put == 'function') this._put(key, value);else this._operations.push({\n    type: 'put',\n    key: key,\n    value: value\n  });\n  return this;\n};\n\nAbstractChainedBatch.prototype.del = function (key) {\n  this._checkWritten();\n\n  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer);\n\n  if (err) throw err;\n  if (!this._db._isBuffer(key)) key = String(key);\n  if (typeof this._del == 'function') this._del(key);else this._operations.push({\n    type: 'del',\n    key: key\n  });\n  return this;\n};\n\nAbstractChainedBatch.prototype.clear = function () {\n  this._checkWritten();\n\n  this._operations = [];\n  if (typeof this._clear == 'function') this._clear();\n  return this;\n};\n\nAbstractChainedBatch.prototype.write = function (options, callback) {\n  this._checkWritten();\n\n  if (typeof options == 'function') callback = options;\n  if (typeof callback != 'function') throw new Error('write() requires a callback argument');\n  if (typeof options != 'object') options = {};\n  this._written = true;\n  if (typeof this._write == 'function') return this._write(callback);\n  if (typeof this._db._batch == 'function') return this._db._batch(this._operations, options, callback);\n  process.nextTick(callback);\n};\n\nmodule.exports = AbstractChainedBatch;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/node_modules/abstract-leveldown/abstract-chained-batch.js"],"names":["AbstractChainedBatch","db","_db","_operations","_written","prototype","_checkWritten","Error","put","key","value","err","_checkKeyValue","_isBuffer","String","_put","push","type","del","_del","clear","_clear","write","options","callback","_write","_batch","process","nextTick","module","exports"],"mappings":"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","sourcesContent":["/* Copyright (c) 2013 Rod Vagg, MIT License */\n\nfunction AbstractChainedBatch (db) {\n  this._db         = db\n  this._operations = []\n  this._written    = false\n}\n\nAbstractChainedBatch.prototype._checkWritten = function () {\n  if (this._written)\n    throw new Error('write() already called on this batch')\n}\n\nAbstractChainedBatch.prototype.put = function (key, value) {\n  this._checkWritten()\n\n  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)\n  if (err) throw err\n  err = this._db._checkKeyValue(value, 'value', this._db._isBuffer)\n  if (err) throw err\n\n  if (!this._db._isBuffer(key)) key = String(key)\n  if (!this._db._isBuffer(value)) value = String(value)\n\n  if (typeof this._put == 'function' )\n    this._put(key, value)\n  else\n    this._operations.push({ type: 'put', key: key, value: value })\n\n  return this\n}\n\nAbstractChainedBatch.prototype.del = function (key) {\n  this._checkWritten()\n\n  var err = this._db._checkKeyValue(key, 'key', this._db._isBuffer)\n  if (err) throw err\n\n  if (!this._db._isBuffer(key)) key = String(key)\n\n  if (typeof this._del == 'function' )\n    this._del(key)\n  else\n    this._operations.push({ type: 'del', key: key })\n\n  return this\n}\n\nAbstractChainedBatch.prototype.clear = function () {\n  this._checkWritten()\n\n  this._operations = []\n\n  if (typeof this._clear == 'function' )\n    this._clear()\n\n  return this\n}\n\nAbstractChainedBatch.prototype.write = function (options, callback) {\n  this._checkWritten()\n\n  if (typeof options == 'function')\n    callback = options\n  if (typeof callback != 'function')\n    throw new Error('write() requires a callback argument')\n  if (typeof options != 'object')\n    options = {}\n\n  this._written = true\n\n  if (typeof this._write == 'function' )\n    return this._write(callback)\n\n  if (typeof this._db._batch == 'function')\n    return this._db._batch(this._operations, options, callback)\n\n  process.nextTick(callback)\n}\n\nmodule.exports = AbstractChainedBatch"]},"metadata":{},"sourceType":"script"}