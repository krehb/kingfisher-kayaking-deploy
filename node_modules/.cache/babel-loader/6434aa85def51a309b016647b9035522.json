{"ast":null,"code":"export default function renderKayaks(value,stock,booked){//rendering nonBooked days\nvar stockOfKayaks=stock;//rendering booked days\nvar datesBookArray=[];var reducer=function reducer(accumulator,currentValue){return accumulator+currentValue;};//when day is selected\nbooked.forEach(function(booking){if(value.isSame(booking.date,'day')){var parsedKayaks=JSON.parse(booking.numOfKayaks);datesBookArray.push(parsedKayaks);if(datesBookArray.length>1){// muliple bookings on single date\nvar kayaksBookedTotal=datesBookArray.reduce(reducer);var calculatedLeft=stock-kayaksBookedTotal;stockOfKayaks=calculatedLeft;}else if(datesBookArray.length===1){// single booking on single date\nvar _calculatedLeft=stock-parsedKayaks;stockOfKayaks=_calculatedLeft;}}});return stockOfKayaks;}","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/calendar/renderKayaks.js"],"names":["renderKayaks","value","stock","booked","stockOfKayaks","datesBookArray","reducer","accumulator","currentValue","forEach","booking","isSame","date","parsedKayaks","JSON","parse","numOfKayaks","push","length","kayaksBookedTotal","reduce","calculatedLeft"],"mappings":"AAAA,cAAe,SAASA,CAAAA,YAAT,CAAsBC,KAAtB,CAA6BC,KAA7B,CAAoCC,MAApC,CAA4C,CAGzD;AACE,GAAIC,CAAAA,aAAa,CAAGF,KAApB,CAGF;AACA,GAAIG,CAAAA,cAAc,CAAG,EAArB,CACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,WAAD,CAAcC,YAAd,QAA+BD,CAAAA,WAAW,CAAGC,YAA7C,EAAhB,CAEE;AACAL,MAAM,CAACM,OAAP,CAAe,SAAAC,OAAO,CAAI,CACtB,GAAIT,KAAK,CAACU,MAAN,CAAaD,OAAO,CAACE,IAArB,CAA2B,KAA3B,CAAJ,CAAwC,CACpC,GAAIC,CAAAA,YAAY,CAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACM,WAAnB,CAAnB,CACAX,cAAc,CAACY,IAAf,CAAoBJ,YAApB,EAEA,GAAGR,cAAc,CAACa,MAAf,CAAwB,CAA3B,CAA6B,CACzB;AACA,GAAIC,CAAAA,iBAAiB,CAAGd,cAAc,CAACe,MAAf,CAAsBd,OAAtB,CAAxB,CACA,GAAIe,CAAAA,cAAc,CAAGnB,KAAK,CAAGiB,iBAA7B,CACAf,aAAa,CAAGiB,cAAhB,CAEH,CAND,IAMO,IAAIhB,cAAc,CAACa,MAAf,GAA0B,CAA9B,CAAgC,CACnC;AACA,GAAIG,CAAAA,eAAc,CAAGnB,KAAK,CAAGW,YAA7B,CACAT,aAAa,CAAGiB,eAAhB,CACH,CACJ,CACJ,CAjBD,EAoBA,MAAOjB,CAAAA,aAAP,CACH","sourcesContent":["export default function renderKayaks(value, stock, booked) {\r\n\r\n\r\n  //rendering nonBooked days\r\n    let stockOfKayaks = stock\r\n\r\n\r\n  //rendering booked days\r\n  let datesBookArray = []\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n    //when day is selected\r\n    booked.forEach(booking => {\r\n        if (value.isSame(booking.date, 'day') ) {\r\n            let parsedKayaks = JSON.parse(booking.numOfKayaks)\r\n            datesBookArray.push(parsedKayaks)\r\n\r\n            if(datesBookArray.length > 1){\r\n                // muliple bookings on single date\r\n                let kayaksBookedTotal = datesBookArray.reduce(reducer)\r\n                let calculatedLeft = stock - kayaksBookedTotal\r\n                stockOfKayaks = calculatedLeft\r\n\r\n            } else if (datesBookArray.length === 1){\r\n                // single booking on single date\r\n                let calculatedLeft = stock - parsedKayaks\r\n                stockOfKayaks = calculatedLeft\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return stockOfKayaks\r\n}"]},"metadata":{},"sourceType":"module"}