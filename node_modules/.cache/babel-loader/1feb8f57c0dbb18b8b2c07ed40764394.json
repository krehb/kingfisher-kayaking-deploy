{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\SelectionForm\\\\SelectionForm.js\";\nimport React, { useState } from 'react';\nimport { Form, Col, Container, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase';\nimport moment from 'moment';\nimport './SelectionForm.css';\n\nfunction SelectionFrom({\n  showForm,\n  kayaks,\n  route,\n  value,\n  showHome,\n  kayaksInStock\n}) {\n  const [tripName, SetTripName] = useState('no trip name');\n  const [kayaksTaking, setKayaksTaking] = useState();\n  const [startTime, setTime] = useState('not selected');\n  const [location, setLocation] = useState('not selected');\n  const [otherLoaction, SetOtherLocation] = useState('not selected');\n  const [phoneNum, setPhone] = useState('not selected');\n  const [ifChecked, setChecked] = useState(); // firebase requirements\n\n  const database = firebase.database();\n  const ref = database.ref('bookings');\n  const booking = {\n    route: route,\n    name: tripName,\n    numOfKayaks: kayaksTaking,\n    time: startTime,\n    pickUpLocation: location,\n    other: otherLoaction,\n    date: value.format(\"MM/DD/YY\"),\n    phone: phoneNum,\n    timeBooked: moment().format('MMMM Do YYYY, h:mm:ss a')\n  }; //submitting form to firebase database\n\n  const submitHandler = () => {\n    if (kayaksTaking > 0 && ifChecked) {\n      console.log('booking sent');\n      ref.push(booking); //   showHome()\n    } else {\n      console.log('erroror');\n      console.log(ifChecked);\n    }\n  }; // dynamic list option\n\n\n  let mulitpleBookings = [1];\n  let selectedMuliBookings = [];\n  let numKayaks = [];\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\n\n  let checkMarker = [];\n  let list = [];\n\n  for (let i = 1; i < kayaksInStock + 1; i++) {\n    list.push(i);\n  }\n\n  let testList = [];\n  let selectedKayaks = [];\n  let kayaksOptions = list.map(x => /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 39\n    }\n  }, x));\n  kayaks.forEach(booking => {\n    if (value.isSame(booking.date, 'day')) {\n      checkMarker.push(booking.date);\n      let parseNum = JSON.parse(booking.numOfKayaks);\n      testList.push(parseNum);\n      let newSum = testList.reduce(reducer);\n      let kayaksAvail = kayaksInStock - newSum;\n      console.log(kayaksAvail); // console.log(selectedMuliBookings)\n      // for (let i = 0; i < kayaksAvail; i++){\n      //     selectedMuliBookings.push(i)\n      // };\n      // console.log(selectedMuliBookings)\n      // kayaksOptions = (selectedMuliBookings.map(x => <option>{x}</option>))\n\n      if (checkMarker.length > 1) {\n        // for mulitple bookings on single date\n        for (let i = 0; i < booking.numOfKayaks.length; i++) {\n          let obj = JSON.parse(booking.numOfKayaks); // mulitpleBookings.push(obj)\n          // console.log(obj)\n        }\n\n        let sum = mulitpleBookings.reduce(reducer);\n\n        for (let i = 0; i < sum - 1; i++) {\n          selectedMuliBookings.push(i);\n        }\n\n        kayaksOptions = selectedMuliBookings.map(x => /*#__PURE__*/React.createElement(\"option\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 64\n          }\n        }, x));\n      } else {\n        //for single datebooked\n        console.log('single day booking'); // let num = (kayaksInStock + 1) - booking.numOfKayaks\n        // numKayaks.push(booking.numOfKayaks)\n        // for (let i = 0; i < num; i++){                \n        //     selectedKayaks.push(i)\n        // };\n        // kayaksOptions = (selectedKayaks.map(x => <option>{x}</option> ))\n      }\n    }\n  });\n  let selectionForm = null;\n\n  if (showForm) {\n    selectionForm = /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"justify-content-md-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"form shadow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"form-text header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, route, \" on \", value.format('dddd'), \", \", value.format(\"MMMM Do\"))), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Trip Name\",\n      onChange: e => {\n        SetTripName(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \"Number of Kayaks\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: \"Choose...\",\n      onChange: e => {\n        setKayaksTaking(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, kayaksOptions))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    }, \"Pick Up Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: \"Choose...\",\n      onChange: e => {\n        setLocation(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }, \"MarketPlace Mall (North East Corner)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 37\n      }\n    }, \"LincolnSquare Mall (South Side)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 37\n      }\n    }, \"Savoy Walmart (North East Corner)\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, \"Other\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 29\n      }\n    }, \"(If selected) Other\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"an address\",\n      onChange: e => {\n        SetOtherLocation(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 33\n      }\n    }, \"Start Time\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      defaultValue: \"Choose...\",\n      onChange: e => {\n        setTime(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 37\n      }\n    }, \"8:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 37\n      }\n    }, \"9:00 am\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 37\n      }\n    }, \"10:00 am\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      controlId: \"formGridphone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      className: \"form-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Phone Number\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"phone\",\n      placeholder: \"217-777-7777\",\n      onChange: e => {\n        setPhone(e.target.value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Form.Group, {\n      id: \"formGridCheckbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      onChange: e => {\n        setChecked(e.target.checked);\n      },\n      type: \"checkbox\",\n      label: \"I agree to sign my life away (click to see details)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      onClick: submitHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, \"Continue  \", /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"arrow-right\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 47\n      }\n    }))))))));\n  } else {\n    selectionForm = null;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }\n  }, selectionForm);\n}\n\nexport default SelectionFrom;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/SelectionForm/SelectionForm.js"],"names":["React","useState","Form","Col","Container","Row","FontAwesomeIcon","firebase","moment","SelectionFrom","showForm","kayaks","route","value","showHome","kayaksInStock","tripName","SetTripName","kayaksTaking","setKayaksTaking","startTime","setTime","location","setLocation","otherLoaction","SetOtherLocation","phoneNum","setPhone","ifChecked","setChecked","database","ref","booking","name","numOfKayaks","time","pickUpLocation","other","date","format","phone","timeBooked","submitHandler","console","log","push","mulitpleBookings","selectedMuliBookings","numKayaks","reducer","accumulator","currentValue","checkMarker","list","i","testList","selectedKayaks","kayaksOptions","map","x","forEach","isSame","parseNum","JSON","parse","newSum","reduce","kayaksAvail","length","obj","sum","selectionForm","e","target","checked"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\r\nimport { Form, Col, Container, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\nimport moment from 'moment';\r\nimport './SelectionForm.css';\r\n\r\nfunction SelectionFrom({showForm, kayaks, route, value, showHome, kayaksInStock  }) {\r\n\r\n    const [tripName, SetTripName] = useState('no trip name');\r\n    const [kayaksTaking, setKayaksTaking] = useState();\r\n    const [startTime, setTime] = useState('not selected');\r\n    const [location, setLocation] = useState('not selected');\r\n    const [otherLoaction, SetOtherLocation] = useState('not selected');\r\n    const [phoneNum, setPhone] = useState('not selected');\r\n    const [ifChecked, setChecked] = useState();\r\n\r\n\r\n  // firebase requirements\r\n  const database = firebase.database();\r\n  const ref = database.ref('bookings');\r\n\r\n\r\n  const booking = {\r\n    route: route,\r\n    name: tripName,\r\n    numOfKayaks: kayaksTaking,\r\n    time: startTime,\r\n    pickUpLocation: location,\r\n    other: otherLoaction,\r\n    date: value.format(\"MM/DD/YY\"),\r\n    phone: phoneNum,\r\n    timeBooked: moment().format('MMMM Do YYYY, h:mm:ss a')\r\n  }\r\n\r\n  //submitting form to firebase database\r\n  const submitHandler = () => {\r\n    if(kayaksTaking > 0 && ifChecked){\r\n      console.log('booking sent');\r\n      ref.push(booking);\r\n    //   showHome()\r\n    } else {\r\n      console.log('erroror')\r\n      console.log(ifChecked)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n    // dynamic list option\r\n    let mulitpleBookings = [1]\r\n    let selectedMuliBookings = []\r\n    let numKayaks = []\r\n    const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n    let checkMarker = []\r\n    let list = []\r\n    for(let i = 1; i < kayaksInStock + 1; i++){\r\n        list.push(i)\r\n    }\r\n    let testList = []\r\n    let selectedKayaks = []\r\n    let kayaksOptions = list.map(x => <option>{x}</option> )\r\n    kayaks.forEach(booking => {\r\n        if (value.isSame(booking.date, 'day') ) {\r\n\r\n            checkMarker.push(booking.date)\r\n            let parseNum = JSON.parse(booking.numOfKayaks)\r\n            testList.push(parseNum)\r\n\r\n\r\n            let newSum = testList.reduce(reducer)\r\n            let kayaksAvail = kayaksInStock - newSum\r\n            console.log(kayaksAvail)\r\n            // console.log(selectedMuliBookings)\r\n            // for (let i = 0; i < kayaksAvail; i++){\r\n            //     selectedMuliBookings.push(i)\r\n            // };\r\n\r\n            // console.log(selectedMuliBookings)\r\n            \r\n            // kayaksOptions = (selectedMuliBookings.map(x => <option>{x}</option>))\r\n            \r\n            if (checkMarker.length > 1){\r\n                // for mulitple bookings on single date\r\n                for (let i = 0; i < booking.numOfKayaks.length; i++){\r\n                    let obj = JSON.parse(booking.numOfKayaks)\r\n                    // mulitpleBookings.push(obj)\r\n                    // console.log(obj)\r\n                }\r\n                let sum = mulitpleBookings.reduce(reducer)\r\n                for (let i = 0; i < sum -1; i++){\r\n                    selectedMuliBookings.push(i)\r\n                }\r\n                kayaksOptions = (selectedMuliBookings.map(x => <option>{x}</option> ))\r\n            } else {\r\n            //for single datebooked\r\n                console.log('single day booking')\r\n                // let num = (kayaksInStock + 1) - booking.numOfKayaks\r\n                // numKayaks.push(booking.numOfKayaks)\r\n                // for (let i = 0; i < num; i++){                \r\n                //     selectedKayaks.push(i)\r\n                // };\r\n                // kayaksOptions = (selectedKayaks.map(x => <option>{x}</option> ))\r\n            }\r\n        } \r\n    });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    let selectionForm = null\r\n    if (showForm){ selectionForm = ( \r\n        <Container fluid >\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col sm={8} >\r\n                    <Form  className='form shadow'>\r\n                        <Form.Row>\r\n                            <p className='form-text header' >{route} on {value.format('dddd')}, {value.format(\"MMMM Do\")}</p>\r\n                        </Form.Row>\r\n                        <hr></hr>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridname\">\r\n                            <Form.Label className='form-text'>Name</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Trip Name\" onChange={(e)=> {SetTripName(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label className='form-text'>Number of Kayaks</Form.Label>\r\n                                <Form.Control as=\"select\" defaultValue=\"Choose...\"  onChange={(e)=> {setKayaksTaking(e.target.value)}}>\r\n                                {kayaksOptions}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label className='form-text'>Pick Up Location</Form.Label>\r\n                                <Form.Control as=\"select\" defaultValue=\"Choose...\"  onChange={(e) => {setLocation(e.target.value)}}>\r\n                                    <option>MarketPlace Mall (North East Corner)</option>\r\n                                    <option>LincolnSquare Mall (South Side)</option>\r\n                                    <option>Savoy Walmart (North East Corner)</option>\r\n                                    <option>Other</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridname\">\r\n                            <Form.Label className='form-text'>(If selected) Other</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"an address\" onChange={(e)=> {SetOtherLocation(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridPassword\">\r\n                                <Form.Label className='form-text'>Start Time</Form.Label>\r\n                                <Form.Control as=\"select\" defaultValue=\"Choose...\"  onChange={(e)=> {setTime(e.target.value)}}>\r\n                                    <option>8:00 am</option>\r\n                                    <option>9:00 am</option>\r\n                                    <option>10:00 am</option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Group as={Col} controlId=\"formGridphone\">\r\n                            <Form.Label className='form-text'>Phone Number</Form.Label>\r\n                            <Form.Control type=\"phone\" placeholder=\"217-777-7777\" onChange={(e) => {setPhone(e.target.value)}} />\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group id=\"formGridCheckbox\" >\r\n                            <Form.Check onChange={(e) => {setChecked(e.target.checked)}}  type=\"checkbox\" label=\"I agree to sign my life away (click to see details)\" />\r\n                        </Form.Group>\r\n\r\n                        <Row>\r\n                            <Col>\r\n                                {/* <div onClick={back}>\r\n                                    <FontAwesomeIcon icon=\"arrow-left\"  size=\"1x\" /> Back\r\n                                </div> */}\r\n                            </Col>\r\n                            <Col>\r\n                                <div onClick={submitHandler}>\r\n                                    Continue  <FontAwesomeIcon icon=\"arrow-right\"  size=\"1x\" />\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );} else { selectionForm = (null)  };\r\n    \r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {selectionForm}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectionFrom;"]},"metadata":{},"sourceType":"module"}