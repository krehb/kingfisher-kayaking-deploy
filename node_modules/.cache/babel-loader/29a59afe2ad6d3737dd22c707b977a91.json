{"ast":null,"code":"/* Copyright (c) 2012-2014 LevelUP contributors\n * See list at <https://github.com/rvagg/node-levelup#contributing>\n * MIT License\n * <https://github.com/rvagg/node-levelup/blob/master/LICENSE.md>\n */\nvar EventEmitter = require('events').EventEmitter,\n    inherits = require('util').inherits,\n    extend = require('xtend'),\n    prr = require('prr'),\n    DeferredLevelDOWN = require('deferred-leveldown'),\n    WriteError = require('./errors').WriteError,\n    ReadError = require('./errors').ReadError,\n    NotFoundError = require('./errors').NotFoundError,\n    OpenError = require('./errors').OpenError,\n    EncodingError = require('./errors').EncodingError,\n    InitializationError = require('./errors').InitializationError,\n    ReadStream = require('./read-stream'),\n    WriteStream = require('./write-stream'),\n    util = require('./util'),\n    Batch = require('./batch'),\n    getOptions = util.getOptions,\n    defaultOptions = util.defaultOptions,\n    getLevelDOWN = util.getLevelDOWN,\n    dispatchError = util.dispatchError;\n\nfunction getCallback(options, callback) {\n  return typeof options == 'function' ? options : callback;\n} // Possible LevelUP#_status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\n\nfunction LevelUP(location, options, callback) {\n  if (!(this instanceof LevelUP)) return new LevelUP(location, options, callback);\n  var error;\n  EventEmitter.call(this);\n  this.setMaxListeners(Infinity);\n\n  if (typeof location == 'function') {\n    options = typeof options == 'object' ? options : {};\n    options.db = location;\n    location = null;\n  } else if (typeof location == 'object' && typeof location.db == 'function') {\n    options = location;\n    location = null;\n  }\n\n  if (typeof options == 'function') {\n    callback = options;\n    options = {};\n  }\n\n  if ((!options || typeof options.db != 'function') && typeof location != 'string') {\n    error = new InitializationError('Must provide a location for the database');\n\n    if (callback) {\n      return process.nextTick(function () {\n        callback(error);\n      });\n    }\n\n    throw error;\n  }\n\n  options = getOptions(this, options);\n  this.options = extend(defaultOptions, options);\n  this._status = 'new'; // set this.location as enumerable but not configurable or writable\n\n  prr(this, 'location', location, 'e');\n  this.open(callback);\n}\n\ninherits(LevelUP, EventEmitter);\n\nLevelUP.prototype.open = function (callback) {\n  var self = this,\n      dbFactory,\n      db;\n\n  if (this.isOpen()) {\n    if (callback) process.nextTick(function () {\n      callback(null, self);\n    });\n    return this;\n  }\n\n  if (this._isOpening()) {\n    return callback && this.once('open', function () {\n      callback(null, self);\n    });\n  }\n\n  this.emit('opening');\n  this._status = 'opening';\n  this.db = new DeferredLevelDOWN(this.location);\n  dbFactory = this.options.db || getLevelDOWN();\n  db = dbFactory(this.location);\n  db.open(this.options, function (err) {\n    if (err) {\n      return dispatchError(self, new OpenError(err), callback);\n    } else {\n      self.db.setDb(db);\n      self.db = db;\n      self._status = 'open';\n      if (callback) callback(null, self);\n      self.emit('open');\n      self.emit('ready');\n    }\n  });\n};\n\nLevelUP.prototype.close = function (callback) {\n  var self = this;\n\n  if (this.isOpen()) {\n    this._status = 'closing';\n    this.db.close(function () {\n      self._status = 'closed';\n      self.emit('closed');\n      if (callback) callback.apply(null, arguments);\n    });\n    this.emit('closing');\n    this.db = null;\n  } else if (this._status == 'closed' && callback) {\n    return process.nextTick(callback);\n  } else if (this._status == 'closing' && callback) {\n    this.once('closed', callback);\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback);\n    });\n  }\n};\n\nLevelUP.prototype.isOpen = function () {\n  return this._status == 'open';\n};\n\nLevelUP.prototype._isOpening = function () {\n  return this._status == 'opening';\n};\n\nLevelUP.prototype.isClosed = function () {\n  return /^clos/.test(this._status);\n};\n\nLevelUP.prototype.get = function (key_, options, callback) {\n  var self = this,\n      key;\n  callback = getCallback(options, callback);\n\n  if (typeof callback != 'function') {\n    return dispatchError(this, new ReadError('get() requires key and callback arguments'));\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(this, new ReadError('Database is not open'), callback);\n  }\n\n  options = util.getOptions(this, options);\n  key = util.encodeKey(key_, options);\n  options.asBuffer = util.isValueAsBuffer(options);\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if (/notfound/i.test(err)) {\n        err = new NotFoundError('Key not found in database [' + key_ + ']', err);\n      } else {\n        err = new ReadError(err);\n      }\n\n      return dispatchError(self, err, callback);\n    }\n\n    if (callback) {\n      try {\n        value = util.decodeValue(value, options);\n      } catch (e) {\n        return callback(new EncodingError(e));\n      }\n\n      callback(null, value);\n    }\n  });\n};\n\nLevelUP.prototype.put = function (key_, value_, options, callback) {\n  var self = this,\n      key,\n      value;\n  callback = getCallback(options, callback);\n\n  if (key_ === null || key_ === undefined || value_ === null || value_ === undefined) {\n    return dispatchError(this, new WriteError('put() requires key and value arguments'), callback);\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(this, new WriteError('Database is not open'), callback);\n  }\n\n  options = getOptions(this, options);\n  key = util.encodeKey(key_, options);\n  value = util.encodeValue(value_, options);\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback);\n    } else {\n      self.emit('put', key_, value_);\n      if (callback) callback();\n    }\n  });\n};\n\nLevelUP.prototype.del = function (key_, options, callback) {\n  var self = this,\n      key;\n  callback = getCallback(options, callback);\n\n  if (key_ === null || key_ === undefined) {\n    return dispatchError(this, new WriteError('del() requires a key argument'), callback);\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(this, new WriteError('Database is not open'), callback);\n  }\n\n  options = getOptions(this, options);\n  key = util.encodeKey(key_, options);\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback);\n    } else {\n      self.emit('del', key_);\n      if (callback) callback();\n    }\n  });\n};\n\nLevelUP.prototype.batch = function (arr_, options, callback) {\n  var self = this,\n      keyEnc,\n      valueEnc,\n      arr;\n  if (!arguments.length) return new Batch(this);\n  callback = getCallback(options, callback);\n\n  if (!Array.isArray(arr_)) {\n    return dispatchError(this, new WriteError('batch() requires an array argument'), callback);\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(this, new WriteError('Database is not open'), callback);\n  }\n\n  options = getOptions(this, options);\n  keyEnc = options.keyEncoding;\n  valueEnc = options.valueEncoding;\n  arr = arr_.map(function (e) {\n    if (e.type === undefined || e.key === undefined) return {}; // inherit encoding\n\n    var kEnc = e.keyEncoding || keyEnc,\n        vEnc = e.valueEncoding || e.encoding || valueEnc,\n        o; // If we're not dealing with plain utf8 strings or plain\n    // Buffers then we have to do some work on the array to\n    // encode the keys and/or values. This includes JSON types.\n\n    if (kEnc != 'utf8' && kEnc != 'binary' || vEnc != 'utf8' && vEnc != 'binary') {\n      o = {\n        type: e.type,\n        key: util.encodeKey(e.key, options, e)\n      };\n      if (e.value !== undefined) o.value = util.encodeValue(e.value, options, e);\n      return o;\n    } else {\n      return e;\n    }\n  });\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback);\n    } else {\n      self.emit('batch', arr_);\n      if (callback) callback();\n    }\n  });\n}; // DEPRECATED: prefer accessing LevelDOWN for this: db.db.approximateSize()\n\n\nLevelUP.prototype.approximateSize = function (start_, end_, callback) {\n  var self = this,\n      start,\n      end;\n\n  if (start_ === null || start_ === undefined || end_ === null || end_ === undefined || typeof callback != 'function') {\n    return dispatchError(this, new ReadError('approximateSize() requires start, end and callback arguments'), callback);\n  }\n\n  start = util.encodeKey(start_, this.options);\n  end = util.encodeKey(end_, this.options);\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(this, new WriteError('Database is not open'), callback);\n  }\n\n  this.db.approximateSize(start, end, function (err, size) {\n    if (err) {\n      return dispatchError(self, new OpenError(err), callback);\n    } else if (callback) {\n      callback(null, size);\n    }\n  });\n};\n\nLevelUP.prototype.readStream = LevelUP.prototype.createReadStream = function (options) {\n  var self = this;\n  options = extend(this.options, options);\n  return new ReadStream(options, this, function (options) {\n    return self.db.iterator(options);\n  });\n};\n\nLevelUP.prototype.keyStream = LevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: true,\n    values: false\n  }));\n};\n\nLevelUP.prototype.valueStream = LevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: false,\n    values: true\n  }));\n};\n\nLevelUP.prototype.writeStream = LevelUP.prototype.createWriteStream = function (options) {\n  return new WriteStream(extend(options), this);\n};\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP';\n};\n\nfunction utilStatic(name) {\n  return function (location, callback) {\n    getLevelDOWN()[name](location, callback || function () {});\n  };\n}\n\nmodule.exports = LevelUP;\nmodule.exports.copy = util.copy; // DEPRECATED: prefer accessing LevelDOWN for this: require('leveldown').destroy()\n\nmodule.exports.destroy = utilStatic('destroy'); // DEPRECATED: prefer accessing LevelDOWN for this: require('leveldown').repair()\n\nmodule.exports.repair = utilStatic('repair');","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/node_modules/levelup/lib/levelup.js"],"names":["EventEmitter","require","inherits","extend","prr","DeferredLevelDOWN","WriteError","ReadError","NotFoundError","OpenError","EncodingError","InitializationError","ReadStream","WriteStream","util","Batch","getOptions","defaultOptions","getLevelDOWN","dispatchError","getCallback","options","callback","LevelUP","location","error","call","setMaxListeners","Infinity","db","process","nextTick","_status","open","prototype","self","dbFactory","isOpen","_isOpening","once","emit","err","setDb","close","apply","arguments","isClosed","test","get","key_","key","encodeKey","asBuffer","isValueAsBuffer","value","decodeValue","e","put","value_","undefined","encodeValue","del","batch","arr_","keyEnc","valueEnc","arr","length","Array","isArray","keyEncoding","valueEncoding","map","type","kEnc","vEnc","encoding","o","approximateSize","start_","end_","start","end","size","readStream","createReadStream","iterator","keyStream","createKeyStream","keys","values","valueStream","createValueStream","writeStream","createWriteStream","toString","utilStatic","name","module","exports","copy","destroy","repair"],"mappings":"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","sourcesContent":["/* Copyright (c) 2012-2014 LevelUP contributors\n * See list at <https://github.com/rvagg/node-levelup#contributing>\n * MIT License\n * <https://github.com/rvagg/node-levelup/blob/master/LICENSE.md>\n */\n\nvar EventEmitter   = require('events').EventEmitter\n  , inherits       = require('util').inherits\n  , extend         = require('xtend')\n  , prr            = require('prr')\n  , DeferredLevelDOWN = require('deferred-leveldown')\n\n  , WriteError     = require('./errors').WriteError\n  , ReadError      = require('./errors').ReadError\n  , NotFoundError  = require('./errors').NotFoundError\n  , OpenError      = require('./errors').OpenError\n  , EncodingError  = require('./errors').EncodingError\n  , InitializationError = require('./errors').InitializationError\n\n  , ReadStream     = require('./read-stream')\n  , WriteStream    = require('./write-stream')\n  , util           = require('./util')\n  , Batch          = require('./batch')\n\n  , getOptions     = util.getOptions\n  , defaultOptions = util.defaultOptions\n  , getLevelDOWN   = util.getLevelDOWN\n  , dispatchError  = util.dispatchError\n\nfunction getCallback (options, callback) {\n  return typeof options == 'function' ? options : callback\n}\n\n// Possible LevelUP#_status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP (location, options, callback) {\n  if (!(this instanceof LevelUP))\n    return new LevelUP(location, options, callback)\n\n  var error\n\n  EventEmitter.call(this)\n  this.setMaxListeners(Infinity)\n\n  if (typeof location == 'function') {\n    options = typeof options == 'object' ? options : {}\n    options.db = location\n    location = null\n  } else if (typeof location == 'object' && typeof location.db == 'function') {\n    options = location\n    location = null\n  }\n\n  if (typeof options == 'function') {\n    callback = options\n    options  = {}\n  }\n\n  if ((!options || typeof options.db != 'function') && typeof location != 'string') {\n    error = new InitializationError(\n        'Must provide a location for the database')\n    if (callback) {\n      return process.nextTick(function () {\n        callback(error)\n      })\n    }\n    throw error\n  }\n\n  options      = getOptions(this, options)\n  this.options = extend(defaultOptions, options)\n  this._status = 'new'\n  // set this.location as enumerable but not configurable or writable\n  prr(this, 'location', location, 'e')\n\n  this.open(callback)\n}\n\ninherits(LevelUP, EventEmitter)\n\nLevelUP.prototype.open = function (callback) {\n  var self = this\n    , dbFactory\n    , db\n\n  if (this.isOpen()) {\n    if (callback)\n      process.nextTick(function () { callback(null, self) })\n    return this\n  }\n\n  if (this._isOpening()) {\n    return callback && this.once(\n        'open'\n      , function () { callback(null, self) }\n    )\n  }\n\n  this.emit('opening')\n\n  this._status = 'opening'\n  this.db      = new DeferredLevelDOWN(this.location)\n  dbFactory    = this.options.db || getLevelDOWN()\n  db           = dbFactory(this.location)\n\n  db.open(this.options, function (err) {\n    if (err) {\n      return dispatchError(self, new OpenError(err), callback)\n    } else {\n      self.db.setDb(db)\n      self.db = db\n      self._status = 'open'\n      if (callback)\n        callback(null, self)\n      self.emit('open')\n      self.emit('ready')\n    }\n  })\n}\n\nLevelUP.prototype.close = function (callback) {\n  var self = this\n\n  if (this.isOpen()) {\n    this._status = 'closing'\n    this.db.close(function () {\n      self._status = 'closed'\n      self.emit('closed')\n      if (callback)\n        callback.apply(null, arguments)\n    })\n    this.emit('closing')\n    this.db = null\n  } else if (this._status == 'closed' && callback) {\n    return process.nextTick(callback)\n  } else if (this._status == 'closing' && callback) {\n    this.once('closed', callback)\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback)\n    })\n  }\n}\n\nLevelUP.prototype.isOpen = function () {\n  return this._status == 'open'\n}\n\nLevelUP.prototype._isOpening = function () {\n  return this._status == 'opening'\n}\n\nLevelUP.prototype.isClosed = function () {\n  return (/^clos/).test(this._status)\n}\n\nLevelUP.prototype.get = function (key_, options, callback) {\n  var self = this\n    , key\n\n  callback = getCallback(options, callback)\n\n  if (typeof callback != 'function') {\n    return dispatchError(\n        this\n      , new ReadError('get() requires key and callback arguments')\n    )\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(\n        this\n      , new ReadError('Database is not open')\n      , callback\n    )\n  }\n\n  options = util.getOptions(this, options)\n  key = util.encodeKey(key_, options)\n\n  options.asBuffer = util.isValueAsBuffer(options)\n\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if ((/notfound/i).test(err)) {\n        err = new NotFoundError(\n            'Key not found in database [' + key_ + ']', err)\n      } else {\n        err = new ReadError(err)\n      }\n      return dispatchError(self, err, callback)\n    }\n    if (callback) {\n      try {\n        value = util.decodeValue(value, options)\n      } catch (e) {\n        return callback(new EncodingError(e))\n      }\n      callback(null, value)\n    }\n  })\n}\n\nLevelUP.prototype.put = function (key_, value_, options, callback) {\n  var self = this\n    , key\n    , value\n\n  callback = getCallback(options, callback)\n\n  if (key_ === null || key_ === undefined\n        || value_ === null || value_ === undefined) {\n    return dispatchError(\n        this\n       , new WriteError('put() requires key and value arguments')\n       , callback\n    )\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(\n        this\n      , new WriteError('Database is not open')\n      , callback\n    )\n  }\n\n  options = getOptions(this, options)\n  key     = util.encodeKey(key_, options)\n  value   = util.encodeValue(value_, options)\n\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback)\n    } else {\n      self.emit('put', key_, value_)\n      if (callback)\n        callback()\n    }\n  })\n}\n\nLevelUP.prototype.del = function (key_, options, callback) {\n  var self = this\n    , key\n\n  callback = getCallback(options, callback)\n\n  if (key_ === null || key_ === undefined) {\n    return dispatchError(\n        this\n      , new WriteError('del() requires a key argument')\n      , callback\n    )\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(\n        this\n      , new WriteError('Database is not open')\n      , callback\n    )\n  }\n\n  options = getOptions(this, options)\n  key     = util.encodeKey(key_, options)\n\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback)\n    } else {\n      self.emit('del', key_)\n      if (callback)\n        callback()\n    }\n  })\n}\n\nLevelUP.prototype.batch = function (arr_, options, callback) {\n  var self = this\n    , keyEnc\n    , valueEnc\n    , arr\n\n  if (!arguments.length)\n    return new Batch(this)\n\n  callback = getCallback(options, callback)\n\n  if (!Array.isArray(arr_)) {\n    return dispatchError(\n        this\n      , new WriteError('batch() requires an array argument')\n      , callback\n    )\n  }\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(\n        this\n      , new WriteError('Database is not open')\n      , callback\n    )\n  }\n\n  options  = getOptions(this, options)\n  keyEnc   = options.keyEncoding\n  valueEnc = options.valueEncoding\n\n  arr = arr_.map(function (e) {\n    if (e.type === undefined || e.key === undefined)\n      return {}\n\n    // inherit encoding\n    var kEnc = e.keyEncoding || keyEnc\n      , vEnc = e.valueEncoding || e.encoding || valueEnc\n      , o\n\n    // If we're not dealing with plain utf8 strings or plain\n    // Buffers then we have to do some work on the array to\n    // encode the keys and/or values. This includes JSON types.\n\n    if (kEnc != 'utf8' && kEnc != 'binary'\n        || vEnc != 'utf8' && vEnc != 'binary') {\n      o = {\n          type: e.type\n        , key: util.encodeKey(e.key, options, e)\n      }\n\n      if (e.value !== undefined)\n        o.value = util.encodeValue(e.value, options, e)\n\n      return o\n    } else {\n      return e\n    }\n  })\n\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return dispatchError(self, new WriteError(err), callback)\n    } else {\n      self.emit('batch', arr_)\n      if (callback)\n        callback()\n    }\n  })\n}\n\n// DEPRECATED: prefer accessing LevelDOWN for this: db.db.approximateSize()\nLevelUP.prototype.approximateSize = function (start_, end_, callback) {\n  var self = this\n    , start\n    , end\n\n  if (start_ === null || start_ === undefined\n        || end_ === null || end_ === undefined\n        || typeof callback != 'function') {\n    return dispatchError(\n        this\n      , new ReadError('approximateSize() requires start, end and callback arguments')\n      , callback\n    )\n  }\n\n  start = util.encodeKey(start_, this.options)\n  end   = util.encodeKey(end_, this.options)\n\n  if (!this._isOpening() && !this.isOpen()) {\n    return dispatchError(\n        this\n      , new WriteError('Database is not open')\n      , callback\n    )\n  }\n\n  this.db.approximateSize(start, end, function (err, size) {\n    if (err) {\n      return dispatchError(self, new OpenError(err), callback)\n    } else if (callback) {\n      callback(null, size)\n    }\n  })\n}\n\nLevelUP.prototype.readStream =\nLevelUP.prototype.createReadStream = function (options) {\n  var self = this\n  options = extend(this.options, options)\n  return new ReadStream(\n      options\n    , this\n    , function (options) {\n        return self.db.iterator(options)\n      }\n  )\n}\n\nLevelUP.prototype.keyStream =\nLevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, { keys: true, values: false }))\n}\n\nLevelUP.prototype.valueStream =\nLevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, { keys: false, values: true }))\n}\n\nLevelUP.prototype.writeStream =\nLevelUP.prototype.createWriteStream = function (options) {\n  return new WriteStream(extend(options), this)\n}\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP'\n}\n\nfunction utilStatic (name) {\n  return function (location, callback) {\n    getLevelDOWN()[name](location, callback || function () {})\n  }\n}\n\nmodule.exports         = LevelUP\nmodule.exports.copy    = util.copy\n// DEPRECATED: prefer accessing LevelDOWN for this: require('leveldown').destroy()\nmodule.exports.destroy = utilStatic('destroy')\n// DEPRECATED: prefer accessing LevelDOWN for this: require('leveldown').repair()\nmodule.exports.repair  = utilStatic('repair')\n"]},"metadata":{},"sourceType":"script"}