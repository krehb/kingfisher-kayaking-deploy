{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\routes\\\\routeCard.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst Route = ({\n  title,\n  waterLevel,\n  duration,\n  cost,\n  learn,\n  pic,\n  setRoute,\n  waterLevelSetting\n}) => {\n  //getting waterlevel data\n  const url = `https://waterservices.usgs.gov/nwis/iv/?format=json&sites=0${waterLevel}&parameterCd=00065&siteStatus=all`;\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch(url);\n      const data = await response.json();\n      const waterLevelStat = data.value.timeSeries[0].values[0].value[0].value;\n      setWaterLevel(waterLevelStat);\n    }\n\n    getData();\n  }, []); //rendering waterlevel data and style\n\n  let renderWaterLevel = null;\n  let boxClass = null;\n  let clickFunction = null;\n\n  if (waterLevelSetting === null) {\n    renderWaterLevel = null;\n    boxClass = 'text';\n\n    clickFunction = () => {\n      setRoute(title);\n    };\n  } else {\n    if (1 > waterLevelSetting) {\n      boxClass = 'too-low';\n      clickFunction = null;\n    } else {\n      boxClass = 'text';\n\n      clickFunction = () => {\n        setRoute(title);\n      };\n    }\n\n    renderWaterLevel = waterLevelSetting;\n  }\n\n  return /*#__PURE__*/React.createElement(Col, {\n    sm: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    onClick: clickFunction,\n    className: pic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: boxClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"map-marker-alt\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }), \" \", title), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"clock\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }), \" \", duration, \"hrs\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"dollar-sign\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }), \" \", cost), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"water\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }), \" \", renderWaterLevel, \"ft\"), /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"plus\",\n    size: \"1x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 25\n    }\n  }), \" \", learn, \" Learn More\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default Route;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/routes/routeCard.js"],"names":["React","useEffect","useState","Card","Col","Row","FontAwesomeIcon","Route","title","waterLevel","duration","cost","learn","pic","setRoute","waterLevelSetting","url","getData","response","fetch","data","json","waterLevelStat","value","timeSeries","values","setWaterLevel","renderWaterLevel","boxClass","clickFunction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {  Card, Col, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\n\r\nconst Route = ({title, waterLevel, duration, cost, learn, pic, setRoute, waterLevelSetting}) => {\r\n\r\n\r\n\r\n\r\n    //getting waterlevel data\r\n    const url = `https://waterservices.usgs.gov/nwis/iv/?format=json&sites=0${waterLevel}&parameterCd=00065&siteStatus=all`\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n            const response = await fetch(url);\r\n            const data = await response.json();\r\n            const waterLevelStat = data.value.timeSeries[0].values[0].value[0].value\r\n            setWaterLevel(waterLevelStat)\r\n        }\r\n        getData();\r\n    },[])\r\n\r\n\r\n    //rendering waterlevel data and style\r\n    let renderWaterLevel = null\r\n    let boxClass = null\r\n    let clickFunction = null\r\n    if(waterLevelSetting === null) {\r\n        renderWaterLevel = (null)\r\n        boxClass = 'text'\r\n        clickFunction = (\r\n            () => {setRoute(title)}\r\n        )\r\n    }   else {\r\n        if(1 > waterLevelSetting) {\r\n            boxClass = 'too-low'\r\n            clickFunction = (null)\r\n        }else {\r\n            boxClass = 'text'\r\n            clickFunction = (\r\n                () => {setRoute(title)}\r\n            )\r\n        }\r\n        renderWaterLevel = waterLevelSetting\r\n    }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Col sm >\r\n        <Card.Body onClick={clickFunction} className={pic}>\r\n            <Row>\r\n                <Col className={boxClass}>\r\n                    <h6><FontAwesomeIcon icon=\"map-marker-alt\"  size=\"1x\" /> {title}</h6>\r\n                    <h6><FontAwesomeIcon icon=\"clock\"  size=\"1x\" /> {duration}hrs</h6>\r\n                    <h6><FontAwesomeIcon icon=\"dollar-sign\"  size=\"1x\" /> {cost}</h6>  \r\n                    <h6><FontAwesomeIcon icon=\"water\"  size=\"1x\" /> {renderWaterLevel}ft</h6>\r\n                    <h6><FontAwesomeIcon icon=\"plus\"  size=\"1x\" /> {learn} Learn More</h6>\r\n                </Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n            </Row>\r\n        </Card.Body>\r\n    </Col>  \r\n  );\r\n};\r\n\r\nexport default Route;"]},"metadata":{},"sourceType":"module"}