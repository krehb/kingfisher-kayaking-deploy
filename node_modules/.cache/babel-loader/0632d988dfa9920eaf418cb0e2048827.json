{"ast":null,"code":"var util = require('util'),\n    AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN;\n\nfunction DeferredLevelDOWN(location) {\n  AbstractLevelDOWN.call(this, typeof location == 'string' ? location : ''); // optional location, who cares?\n\n  this._db = undefined;\n  this._operations = [];\n}\n\nutil.inherits(DeferredLevelDOWN, AbstractLevelDOWN); // called by LevelUP when we have a real DB to take its place\n\nDeferredLevelDOWN.prototype.setDb = function (db) {\n  this._db = db;\n\n  this._operations.forEach(function (op) {\n    db[op.method].apply(db, op.args);\n  });\n};\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  return process.nextTick(callback);\n}; // queue a new deferred operation\n\n\nDeferredLevelDOWN.prototype._operation = function (method, args) {\n  if (this._db) return this._db[method].apply(this._db, args);\n\n  this._operations.push({\n    method: method,\n    args: args\n  });\n}; // deferrables\n\n\n'put get del batch approximateSize'.split(' ').forEach(function (m) {\n  DeferredLevelDOWN.prototype['_' + m] = function () {\n    this._operation(m, arguments);\n  };\n});\n\nDeferredLevelDOWN.prototype._isBuffer = function (obj) {\n  return Buffer.isBuffer(obj);\n}; // don't need to implement this as LevelUP's ReadStream checks for 'ready' state\n\n\nDeferredLevelDOWN.prototype._iterator = function () {\n  throw new TypeError('not implemented');\n};\n\nmodule.exports = DeferredLevelDOWN;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/node_modules/deferred-leveldown/deferred-leveldown.js"],"names":["util","require","AbstractLevelDOWN","DeferredLevelDOWN","location","call","_db","undefined","_operations","inherits","prototype","setDb","db","forEach","op","method","apply","args","_open","options","callback","process","nextTick","_operation","push","split","m","arguments","_isBuffer","obj","Buffer","isBuffer","_iterator","TypeError","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAgBC,OAAO,CAAC,MAAD,CAA/B;AAAA,IACIC,iBAAiB,GAAGD,OAAO,CAAC,oBAAD,CAAP,CAA8BC,iBADtD;;AAGA,SAASC,iBAAT,CAA4BC,QAA5B,EAAsC;AACpCF,EAAAA,iBAAiB,CAACG,IAAlB,CAAuB,IAAvB,EAA6B,OAAOD,QAAP,IAAmB,QAAnB,GAA8BA,QAA9B,GAAyC,EAAtE,EADoC,CACsC;;AAC1E,OAAKE,GAAL,GAAmBC,SAAnB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACD;;AAEDR,IAAI,CAACS,QAAL,CAAcN,iBAAd,EAAiCD,iBAAjC,E,CAEA;;AACAC,iBAAiB,CAACO,SAAlB,CAA4BC,KAA5B,GAAoC,UAAUC,EAAV,EAAc;AAChD,OAAKN,GAAL,GAAWM,EAAX;;AACA,OAAKJ,WAAL,CAAiBK,OAAjB,CAAyB,UAAUC,EAAV,EAAc;AACrCF,IAAAA,EAAE,CAACE,EAAE,CAACC,MAAJ,CAAF,CAAcC,KAAd,CAAoBJ,EAApB,EAAwBE,EAAE,CAACG,IAA3B;AACD,GAFD;AAGD,CALD;;AAOAd,iBAAiB,CAACO,SAAlB,CAA4BQ,KAA5B,GAAoC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC/D,SAAOC,OAAO,CAACC,QAAR,CAAiBF,QAAjB,CAAP;AACD,CAFD,C,CAIA;;;AACAjB,iBAAiB,CAACO,SAAlB,CAA4Ba,UAA5B,GAAyC,UAAUR,MAAV,EAAkBE,IAAlB,EAAwB;AAC/D,MAAI,KAAKX,GAAT,EACE,OAAO,KAAKA,GAAL,CAASS,MAAT,EAAiBC,KAAjB,CAAuB,KAAKV,GAA5B,EAAiCW,IAAjC,CAAP;;AACF,OAAKT,WAAL,CAAiBgB,IAAjB,CAAsB;AAAET,IAAAA,MAAM,EAAEA,MAAV;AAAkBE,IAAAA,IAAI,EAAEA;AAAxB,GAAtB;AACD,CAJD,C,CAMA;;;AACA,oCAAoCQ,KAApC,CAA0C,GAA1C,EAA+CZ,OAA/C,CAAuD,UAAUa,CAAV,EAAa;AAClEvB,EAAAA,iBAAiB,CAACO,SAAlB,CAA4B,MAAMgB,CAAlC,IAAuC,YAAY;AACjD,SAAKH,UAAL,CAAgBG,CAAhB,EAAmBC,SAAnB;AACD,GAFD;AAGD,CAJD;;AAMAxB,iBAAiB,CAACO,SAAlB,CAA4BkB,SAA5B,GAAwC,UAAUC,GAAV,EAAe;AACrD,SAAOC,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAP;AACD,CAFD,C,CAIA;;;AACA1B,iBAAiB,CAACO,SAAlB,CAA4BsB,SAA5B,GAAwC,YAAY;AAClD,QAAM,IAAIC,SAAJ,CAAc,iBAAd,CAAN;AACD,CAFD;;AAIAC,MAAM,CAACC,OAAP,GAAiBhC,iBAAjB","sourcesContent":["var util              = require('util')\n  , AbstractLevelDOWN = require('abstract-leveldown').AbstractLevelDOWN\n\nfunction DeferredLevelDOWN (location) {\n  AbstractLevelDOWN.call(this, typeof location == 'string' ? location : '') // optional location, who cares?\n  this._db         = undefined\n  this._operations = []\n}\n\nutil.inherits(DeferredLevelDOWN, AbstractLevelDOWN)\n\n// called by LevelUP when we have a real DB to take its place\nDeferredLevelDOWN.prototype.setDb = function (db) {\n  this._db = db\n  this._operations.forEach(function (op) {\n    db[op.method].apply(db, op.args)\n  })\n}\n\nDeferredLevelDOWN.prototype._open = function (options, callback) {\n  return process.nextTick(callback)\n}\n\n// queue a new deferred operation\nDeferredLevelDOWN.prototype._operation = function (method, args) {\n  if (this._db)\n    return this._db[method].apply(this._db, args)\n  this._operations.push({ method: method, args: args })\n}\n\n// deferrables\n'put get del batch approximateSize'.split(' ').forEach(function (m) {\n  DeferredLevelDOWN.prototype['_' + m] = function () {\n    this._operation(m, arguments)\n  }\n})\n\nDeferredLevelDOWN.prototype._isBuffer = function (obj) {\n  return Buffer.isBuffer(obj)\n}\n\n// don't need to implement this as LevelUP's ReadStream checks for 'ready' state\nDeferredLevelDOWN.prototype._iterator = function () {\n  throw new TypeError('not implemented')\n}\n\nmodule.exports = DeferredLevelDOWN\n"]},"metadata":{},"sourceType":"script"}