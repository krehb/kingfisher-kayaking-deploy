{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\weather\\\\weather.js\";\nimport React, { Component } from 'react';\nimport Chart from \"chart.js\";\nexport default function LineGraph() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    id: \"myChart\",\n    ref: this.chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }));\n} // export default class LineGraph extends Component {\n//     chartRef = React.createRef();\n//     componentDidMount() {\n//         // const url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial'\n//         // async function get() {\n//         //     const response = await fetch(url);\n//         //     const data = await response.json();\n//         //     console.log(data.list[0].main.temp)\n//         // }\n//         // get();\n//         const myChartRef = this.chartRef.current.getContext(\"2d\");\n//         new Chart(myChartRef, {\n//             type: \"line\",\n//             data: {\n//                 //Bring in data\n//                 labels: [\"Jan\", \"Feb\", \"March\"],\n//                 datasets: [\n//                     {\n//                         label: \"Sales\",\n//                         data: [86, 67, 91],\n//                     }\n//                 ]\n//             },\n//             options: {\n//                 //Customize chart options\n//             }\n//         });\n//     }\n//     render() {\n//         return (\n//             <div >\n//                 <canvas\n//                     id=\"myChart\"\n//                     ref={this.chartRef}\n//                 />\n//             </div>\n//         )\n//     }\n// }","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/weather/weather.js"],"names":["React","Component","Chart","LineGraph","chartRef"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAIhC,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACI,IAAA,EAAE,EAAC,SADP;AAEI,IAAA,GAAG,EAAE,KAAKC,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAFJ;AASH,C,CAED;AACA;AAIA;AAEA;AAEA;AAEA;AACA;AAEA;AAGA;AAEA;AAWA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\nimport Chart from \"chart.js\";\r\n\r\nexport default function LineGraph() {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div >\r\n            <canvas\r\n                id=\"myChart\"\r\n                ref={this.chartRef}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\n// export default class LineGraph extends Component {\r\n//     chartRef = React.createRef();\r\n    \r\n    \r\n\r\n//     componentDidMount() {\r\n\r\n//         // const url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial'\r\n\r\n//         // async function get() {\r\n\r\n//         //     const response = await fetch(url);\r\n//         //     const data = await response.json();\r\n        \r\n//         //     console.log(data.list[0].main.temp)\r\n        \r\n    \r\n//         // }\r\n    \r\n//         // get();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//         const myChartRef = this.chartRef.current.getContext(\"2d\");\r\n        \r\n//         new Chart(myChartRef, {\r\n//             type: \"line\",\r\n//             data: {\r\n//                 //Bring in data\r\n//                 labels: [\"Jan\", \"Feb\", \"March\"],\r\n//                 datasets: [\r\n//                     {\r\n//                         label: \"Sales\",\r\n//                         data: [86, 67, 91],\r\n//                     }\r\n//                 ]\r\n//             },\r\n//             options: {\r\n//                 //Customize chart options\r\n//             }\r\n//         });\r\n//     }\r\n//     render() {\r\n//         return (\r\n//             <div >\r\n//                 <canvas\r\n//                     id=\"myChart\"\r\n//                     ref={this.chartRef}\r\n//                 />\r\n//             </div>\r\n//         )\r\n//     }\r\n// }"]},"metadata":{},"sourceType":"module"}