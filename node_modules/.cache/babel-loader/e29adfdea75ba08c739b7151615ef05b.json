{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\weather\\\\weather.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport Day from './weatherCard';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport Chartjs from 'chart.js';\nimport moment from 'moment';\nconst url7day = 'https://api.openweathermap.org/data/2.5/onecall?lat=40.1105556&lon=-88.2072222&units=imperial&appid=4ccd9d42e589371f8ea88443f33536f9';\nconst url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial';\n\nconst Chart = () => {\n  const array = [{\n    name: 'jaems',\n    age: 9\n  }, {\n    name: 'stanley',\n    age: 10\n  }]; //   const chartContainer = useRef(null);\n  //   const [chartInstance, setChartInstance] = useState(null);\n  //   const [weather, setWeather] = useState(1)\n\n  const now = moment();\n  const today = useState(now.format('dddd'));\n  const tomorrow = useState(now.add(1, 'days').format('dddd'));\n  const twoDaysAway = useState(now.add(1, 'days').format('dddd'));\n  const threeDaysAway = useState(now.add(1, 'days').format('dddd'));\n  const fourDaysAway = useState(now.add(1, 'days').format('dddd'));\n  const fiveDaysAway = useState(now.add(1, 'days').format('dddd'));\n  const sixDaysAway = useState(now.add(1, 'days').format('dddd'));\n  useEffect(() => {\n    //fetching data && rendering chart\n    async function get() {// const response = await fetch(url7day);\n      // const data = await response.json();\n      // console.log(data)  \n      // console.log(data.daily[0].temp.day)\n      // console.log(data.daily[0].weather[0].main)    \n    }\n\n    get();\n  }, []);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, \"Weather App\"))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, array.map(day => {\n    return /*#__PURE__*/React.createElement(Day, {\n      temp: day.age,\n      weather: day.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }\n    });\n  })));\n};\n\nexport default Chart;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/weather/weather.js"],"names":["React","useState","useEffect","useRef","Day","Col","Container","Row","Chartjs","moment","url7day","url","Chart","array","name","age","now","today","format","tomorrow","add","twoDaysAway","threeDaysAway","fourDaysAway","fiveDaysAway","sixDaysAway","get","map","day"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,MAAMC,OAAO,GAAG,sIAAhB;AAEA,MAAMC,GAAG,GAAG,gHAAZ;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAElB,QAAMC,KAAK,GAAG,CAAC;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GAAD,EAAyB;AAACD,IAAAA,IAAI,EAAE,SAAP;AAAkBC,IAAAA,GAAG,EAAE;AAAvB,GAAzB,CAAd,CAFkB,CAIpB;AACA;AAEA;;AAEE,QAAMC,GAAG,GAAGP,MAAM,EAAlB;AACA,QAAMQ,KAAK,GAAGhB,QAAQ,CAACe,GAAG,CAACE,MAAJ,CAAW,MAAX,CAAD,CAAtB;AACA,QAAMC,QAAQ,GAAGlB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAAzB;AACA,QAAMG,WAAW,GAAIpB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAA7B;AACA,QAAMI,aAAa,GAAIrB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAA/B;AACA,QAAMK,YAAY,GAAItB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAA9B;AACA,QAAMM,YAAY,GAAIvB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAA9B;AACA,QAAMO,WAAW,GAAIxB,QAAQ,CAACe,GAAG,CAACI,GAAJ,CAAQ,CAAR,EAAW,MAAX,EAAmBF,MAAnB,CAA0B,MAA1B,CAAD,CAA7B;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAewB,GAAf,GAAqB,CAEjB;AACA;AAEA;AACA;AACA;AAKH;;AACDA,IAAAA,GAAG;AAEJ,GAjBQ,EAiBN,EAjBM,CAAT;AAsBA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAFJ,CADJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKb,KAAK,CAACc,GAAN,CAAUC,GAAG,IAAG;AACb,wBAAO,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAEA,GAAG,CAACb,GAAf;AAAoB,MAAA,OAAO,EAAEa,GAAG,CAACd,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH,GAFA,CADL,CAPJ,CADF;AAeD,CAvDD;;AAyDA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport Day from './weatherCard';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport Chartjs from 'chart.js';\r\nimport moment from 'moment';\r\n\r\n\r\nconst url7day = 'https://api.openweathermap.org/data/2.5/onecall?lat=40.1105556&lon=-88.2072222&units=imperial&appid=4ccd9d42e589371f8ea88443f33536f9'\r\n\r\nconst url = 'http://api.openweathermap.org/data/2.5/forecast?q=urbana&appid=4ccd9d42e589371f8ea88443f33536f9&units=imperial'\r\n\r\n\r\nconst Chart = () => {\r\n\r\n  const array = [{name: 'jaems', age: 9},{name: 'stanley', age: 10}]\r\n\r\n//   const chartContainer = useRef(null);\r\n//   const [chartInstance, setChartInstance] = useState(null);\r\n\r\n//   const [weather, setWeather] = useState(1)\r\n\r\n  const now = moment();\r\n  const today = useState(now.format('dddd'))\r\n  const tomorrow = useState(now.add(1, 'days').format('dddd'))\r\n  const twoDaysAway  = useState(now.add(1, 'days').format('dddd'))\r\n  const threeDaysAway  = useState(now.add(1, 'days').format('dddd'))\r\n  const fourDaysAway  = useState(now.add(1, 'days').format('dddd'))\r\n  const fiveDaysAway  = useState(now.add(1, 'days').format('dddd'))\r\n  const sixDaysAway  = useState(now.add(1, 'days').format('dddd'))\r\n\r\n  useEffect(() => {\r\n    //fetching data && rendering chart\r\n    async function get() {\r\n\r\n        // const response = await fetch(url7day);\r\n        // const data = await response.json();\r\n    \r\n        // console.log(data)  \r\n        // console.log(data.daily[0].temp.day)\r\n        // console.log(data.daily[0].weather[0].main)    \r\n       \r\n\r\n\r\n\r\n    }\r\n    get();\r\n\r\n  }, []);\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n        <Row>\r\n            <Col sm={4} ></Col>\r\n            <Col>\r\n                <h4>Weather App</h4>\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            {array.map(day =>{\r\n                return <Day temp={day.age} weather={day.name} />\r\n            })}\r\n        </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}