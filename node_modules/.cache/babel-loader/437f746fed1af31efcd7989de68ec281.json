{"ast":null,"code":"export default function renderKayaks(value, stock, booked) {\n  console.log(booked);\n  console.log(value.format()); //rendering nonBooked days\n\n  let stockOfKayaks = stock; //rendering booked days\n\n  let datesBookArray = [];\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue; //when day is selected\n\n\n  booked.forEach(booking => {\n    if (value.isSame(booking.date, 'day')) {\n      let parsedKayaks = JSON.parse(booking.numOfKayaks);\n      datesBookArray.push(parsedKayaks);\n\n      if (datesBookArray.length > 1) {\n        // muliple bookings on single date\n        let kayaksBookedTotal = datesBookArray.reduce(reducer);\n        let calculatedLeft = stock - kayaksBookedTotal;\n        stockOfKayaks = calculatedLeft;\n      } else if (datesBookArray.length === 1) {\n        // single booking on single date\n        let calculatedLeft = stock - parsedKayaks;\n        stockOfKayaks = calculatedLeft;\n      }\n    }\n  });\n  return stockOfKayaks;\n}","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/calendar/renderKayaks.js"],"names":["renderKayaks","value","stock","booked","console","log","format","stockOfKayaks","datesBookArray","reducer","accumulator","currentValue","forEach","booking","isSame","date","parsedKayaks","JSON","parse","numOfKayaks","push","length","kayaksBookedTotal","reduce","calculatedLeft"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4C;AAIvDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,MAAN,EAAZ,EALuD,CASzD;;AACE,MAAIC,aAAa,GAAGL,KAApB,CAVuD,CAazD;;AACA,MAAIM,cAAc,GAAG,EAArB;;AACA,QAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAA7D,CAfyD,CAiBvD;;;AACAR,EAAAA,MAAM,CAACS,OAAP,CAAeC,OAAO,IAAI;AACtB,QAAIZ,KAAK,CAACa,MAAN,CAAaD,OAAO,CAACE,IAArB,EAA2B,KAA3B,CAAJ,EAAwC;AACpC,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACM,WAAnB,CAAnB;AACAX,MAAAA,cAAc,CAACY,IAAf,CAAoBJ,YAApB;;AAEA,UAAGR,cAAc,CAACa,MAAf,GAAwB,CAA3B,EAA6B;AACzB;AACA,YAAIC,iBAAiB,GAAGd,cAAc,CAACe,MAAf,CAAsBd,OAAtB,CAAxB;AACA,YAAIe,cAAc,GAAGtB,KAAK,GAAGoB,iBAA7B;AACAf,QAAAA,aAAa,GAAGiB,cAAhB;AAEH,OAND,MAMO,IAAIhB,cAAc,CAACa,MAAf,KAA0B,CAA9B,EAAgC;AACnC;AACA,YAAIG,cAAc,GAAGtB,KAAK,GAAGc,YAA7B;AACAT,QAAAA,aAAa,GAAGiB,cAAhB;AACH;AACJ;AACJ,GAjBD;AAoBA,SAAOjB,aAAP;AACH","sourcesContent":["export default function renderKayaks(value, stock, booked) {\r\n\r\n\r\n\r\n    console.log(booked)\r\n    console.log(value.format())\r\n\r\n\r\n\r\n  //rendering nonBooked days\r\n    let stockOfKayaks = stock\r\n\r\n\r\n  //rendering booked days\r\n  let datesBookArray = []\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n    //when day is selected\r\n    booked.forEach(booking => {\r\n        if (value.isSame(booking.date, 'day') ) {\r\n            let parsedKayaks = JSON.parse(booking.numOfKayaks)\r\n            datesBookArray.push(parsedKayaks)\r\n\r\n            if(datesBookArray.length > 1){\r\n                // muliple bookings on single date\r\n                let kayaksBookedTotal = datesBookArray.reduce(reducer)\r\n                let calculatedLeft = stock - kayaksBookedTotal\r\n                stockOfKayaks = calculatedLeft\r\n\r\n            } else if (datesBookArray.length === 1){\r\n                // single booking on single date\r\n                let calculatedLeft = stock - parsedKayaks\r\n                stockOfKayaks = calculatedLeft\r\n            }\r\n        }\r\n    });\r\n\r\n\r\n    return stockOfKayaks\r\n}"]},"metadata":{},"sourceType":"module"}