{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\routes\\\\routes.js\";\nimport React, { useState } from 'react';\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport firebase from 'firebase';\nimport './routes.css';\nimport Bird from './pic-1.jpg';\nimport Bir from './pic-2.jpg';\nimport Bi from './pic-3.jpg';\n\nfunction Routes({\n  showRoutes,\n  salt,\n  sangamon,\n  saline\n}) {\n  const salineLevel = useState({\n    level: '???'\n  });\n  const saltForkLevel = useState({\n    level: '???'\n  });\n  const sangamonLevel = useState({\n    level: '???'\n  });\n  const database = firebase.database();\n  const ref = database.ref('routes');\n  let route = {\n    name: 'Salt Fork',\n    img: 'bird',\n    site: 3336900,\n    duration: 3,\n    cost: 30\n  }; //setting       water level has to be at least...\n\n  const waterLevelSetting = 1;\n  const routeData = useState({\n    routeCards: [{\n      title: 'Salt Fork',\n      body: 'It is a wide river',\n      img: Bird,\n      button: salt,\n      waterLevel: saltForkLevel[0].level\n    }, {\n      title: 'Sangamon',\n      body: 'This river is Lincolns river',\n      img: Bir,\n      button: sangamon,\n      waterLevel: sangamonLevel[0].level\n    }, {\n      title: 'Saline',\n      body: 'This is the narrowest and most likly to see some cool animals',\n      img: Bi,\n      button: saline,\n      waterLevel: salineLevel[0].level\n    }]\n  });\n  const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all';\n  const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all';\n  const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all';\n\n  const getDataHandler = () => {// async function getData() {\n    //     const response = await fetch(salineURL);\n    //     const responseSalt = await fetch(saltForkURL);\n    //     const responseSangamon = await fetch(sangamonURL);\n    //     const data = await response.json();\n    //     const dataSalt = await responseSalt.json();\n    //     const dataSangamon = await responseSangamon.json();\n    //     const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value\n    //     const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value\n    //     const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value\n    //     salineLevel[1]({level: salineWaterLevel})\n    //     saltForkLevel[1]({level: saltForkWaterLevel})\n    //     sangamonLevel[1]({level: sangamonWaterLevel})\n    // }\n    // getData();\n  };\n\n  let saltClass = 'kayaks-8';\n  let sangamonClass = 'kayaks-8';\n  let salineClass = 'kayaks-8';\n  let saltButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: salt,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 22\n    }\n  }, \"Book Trip\");\n  let sangamonButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: sangamon,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }\n  }, \"Book Trip\");\n  let salineButton = /*#__PURE__*/React.createElement(Button, {\n    onClick: saline,\n    variant: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }\n  }, \"Book Trip\");\n\n  const stylingSaltHandler = () => {\n    saltClass = 'kayaks-0';\n  };\n\n  const stylingSangamonHandler = () => {\n    sangamonClass = 'kayaks-0';\n  };\n\n  const stylingSalineHandler = () => {\n    salineClass = 'kayaks-0';\n  };\n\n  let routes = null;\n\n  if (showRoutes) {\n    if (saltForkLevel[0].level === '???') {\n      getDataHandler();\n    } //styling\n\n\n    if (waterLevelSetting > saltForkLevel[0].level) {\n      stylingSaltHandler();\n      saltButton = null;\n    }\n\n    if (waterLevelSetting > sangamonLevel[0].level) {\n      stylingSangamonHandler();\n      sangamonButton = null;\n    }\n\n    if (waterLevelSetting > salineLevel[0].level) {\n      stylingSalineHandler();\n      salineButton = null;\n    }\n\n    routes = /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      onClick: salt,\n      className: \"card-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"map-marker-alt\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }), \" \", routeData[0].routeCards[0].title), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"clock\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }), \" 1-3hrs\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"dollar-sign\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 41\n      }\n    }), \" 30\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"water\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 41\n      }\n    }), \" \", saltForkLevel[0].level, \" ft\"), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"plus\",\n      size: \"1x\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 41\n      }\n    }), \" Learn More\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: routeData[0].routeCards[1].img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      className: sangamonClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 29\n      }\n    }, routeData[0].routeCards[1].title), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 33\n      }\n    }, routeData[0].routeCards[1].body), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Water Level: \", sangamonLevel[0].level, \" ft\")), sangamonButton)), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Img, {\n      variant: \"top\",\n      src: routeData[0].routeCards[2].img,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Card.Body, {\n      className: salineClass,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, routeData[0].routeCards[2].title), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, routeData[0].routeCards[2].body), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 33\n      }\n    }, \"Water Level: \", salineLevel[0].level, \" ft\")), salineButton))));\n  } else {\n    routes = null;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, routes);\n}\n\nexport default Routes;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/routes/routes.js"],"names":["React","useState","Card","Container","Button","Row","Col","FontAwesomeIcon","firebase","Bird","Bir","Bi","Routes","showRoutes","salt","sangamon","saline","salineLevel","level","saltForkLevel","sangamonLevel","database","ref","route","name","img","site","duration","cost","waterLevelSetting","routeData","routeCards","title","body","button","waterLevel","salineURL","saltForkURL","sangamonURL","getDataHandler","saltClass","sangamonClass","salineClass","saltButton","sangamonButton","salineButton","stylingSaltHandler","stylingSangamonHandler","stylingSalineHandler","routes"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport { Card, Container, Button, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport firebase from 'firebase';\r\nimport './routes.css';\r\nimport Bird from './pic-1.jpg';\r\nimport Bir from './pic-2.jpg';\r\nimport Bi from './pic-3.jpg';\r\n\r\nfunction Routes({showRoutes, salt, sangamon, saline}) {\r\n    \r\n    const salineLevel = useState({level: '???'})\r\n    const saltForkLevel = useState({level: '???'})\r\n    const sangamonLevel = useState({level: '???'})\r\n\r\n    const database = firebase.database();\r\n    const ref = database.ref('routes');\r\n\r\n\r\n    let route = {\r\n        name: 'Salt Fork',\r\n        img: 'bird',\r\n        site: 3336900, \r\n        duration: 3,\r\n        cost: 30,\r\n    }\r\n\r\n\r\n    //setting       water level has to be at least...\r\n    const waterLevelSetting = 1\r\n\r\n    const routeData = useState({routeCards: [\r\n        {title: 'Salt Fork', body: 'It is a wide river', img: Bird, button: salt, waterLevel:  saltForkLevel[0].level},\r\n        {title: 'Sangamon', body: 'This river is Lincolns river', img: Bir, button: sangamon, waterLevel:  sangamonLevel[0].level},\r\n        {title: 'Saline', body: 'This is the narrowest and most likly to see some cool animals', img: Bi, button: saline, waterLevel:  salineLevel[0].level},\r\n    ]})\r\n\r\n\r\n    const salineURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03337570&parameterCd=00065&siteStatus=all'\r\n    const saltForkURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=03336900&parameterCd=00065&siteStatus=all'\r\n    const sangamonURL = 'https://waterservices.usgs.gov/nwis/iv/?format=json&sites=05572000&parameterCd=00065&siteStatus=all'\r\n\r\n\r\n    const getDataHandler = () => {\r\n        // async function getData() {\r\n        //     const response = await fetch(salineURL);\r\n        //     const responseSalt = await fetch(saltForkURL);\r\n        //     const responseSangamon = await fetch(sangamonURL);\r\n        //     const data = await response.json();\r\n        //     const dataSalt = await responseSalt.json();\r\n        //     const dataSangamon = await responseSangamon.json();\r\n        //     const salineWaterLevel = data.value.timeSeries[0].values[0].value[0].value\r\n        //     const saltForkWaterLevel = dataSalt.value.timeSeries[0].values[0].value[0].value\r\n        //     const sangamonWaterLevel = dataSangamon.value.timeSeries[0].values[0].value[0].value\r\n        //     salineLevel[1]({level: salineWaterLevel})\r\n        //     saltForkLevel[1]({level: saltForkWaterLevel})\r\n        //     sangamonLevel[1]({level: sangamonWaterLevel})\r\n        // }\r\n    \r\n        // getData();\r\n\r\n    };\r\n\r\n    let saltClass = 'kayaks-8'\r\n    let sangamonClass = 'kayaks-8'\r\n    let salineClass = 'kayaks-8'\r\n    let saltButton = <Button onClick={salt} variant=\"primary\">Book Trip</Button>\r\n    let sangamonButton = <Button onClick={sangamon} variant=\"primary\">Book Trip</Button>\r\n    let salineButton = <Button onClick={saline} variant=\"primary\">Book Trip</Button>\r\n\r\n    const stylingSaltHandler = () => {\r\n        saltClass = 'kayaks-0'\r\n    };\r\n    const stylingSangamonHandler = () => {\r\n        sangamonClass = 'kayaks-0'\r\n    };\r\n    const stylingSalineHandler = () => {\r\n        salineClass = 'kayaks-0'\r\n    };\r\n\r\n    let routes = null\r\n    if (showRoutes){\r\n\r\n        if (saltForkLevel[0].level === '???'){\r\n            getDataHandler()\r\n        }\r\n\r\n        //styling\r\n        if (waterLevelSetting > saltForkLevel[0].level){\r\n            stylingSaltHandler()\r\n            saltButton = null\r\n        }\r\n        if (waterLevelSetting > sangamonLevel[0].level){\r\n            stylingSangamonHandler()\r\n            sangamonButton = null\r\n        }\r\n        if (waterLevelSetting > salineLevel[0].level){\r\n            stylingSalineHandler()\r\n            salineButton = null\r\n        }\r\n\r\n        \r\n        routes = (\r\n        <Container>\r\n                <Row>\r\n                    <Col sm={4}>\r\n                        {/* <Card.Img variant=\"top\" src={routeData[0].routeCards[0].img} /> */}\r\n                        <Card.Body onClick={salt} className='card-1'>\r\n                            <Row>\r\n                                <Col className='text'>\r\n                                    <h6><FontAwesomeIcon icon=\"map-marker-alt\"  size=\"1x\" /> {routeData[0].routeCards[0].title}</h6>\r\n                                    <h6><FontAwesomeIcon icon=\"clock\"  size=\"1x\" /> 1-3hrs</h6>\r\n                                    <h6><FontAwesomeIcon icon=\"dollar-sign\"  size=\"1x\" /> 30</h6>  \r\n                                    <h6><FontAwesomeIcon icon=\"water\"  size=\"1x\" /> {saltForkLevel[0].level} ft</h6>\r\n                                    <h6><FontAwesomeIcon icon=\"plus\"  size=\"1x\" /> Learn More</h6>\r\n                                </Col>\r\n                                <Col></Col>\r\n                                <Col></Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card.Img variant=\"top\" src={routeData[0].routeCards[1].img} />\r\n                        <Card.Body className={sangamonClass}>\r\n                            <Card.Title>{routeData[0].routeCards[1].title}</Card.Title>\r\n                            <Card.Text>\r\n                                <p>{routeData[0].routeCards[1].body}</p>\r\n                                <h6>Water Level: {sangamonLevel[0].level} ft</h6>\r\n                            </Card.Text>\r\n                            {sangamonButton}\r\n                        </Card.Body>\r\n                    </Col>\r\n                    <Col sm={4}>\r\n                        <Card.Img variant=\"top\" src={routeData[0].routeCards[2].img} />\r\n                        <Card.Body className={salineClass}>\r\n                            <Card.Title>{routeData[0].routeCards[2].title}</Card.Title>\r\n                            <Card.Text>\r\n                                <p>{routeData[0].routeCards[2].body}</p>\r\n                                <h6>Water Level: {salineLevel[0].level} ft</h6>\r\n                            </Card.Text>\r\n                            {salineButton}\r\n                        </Card.Body>\r\n                    </Col>\r\n                </Row>\r\n        </Container>)\r\n    } else { routes = null };\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n            {routes}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Routes;"]},"metadata":{},"sourceType":"module"}