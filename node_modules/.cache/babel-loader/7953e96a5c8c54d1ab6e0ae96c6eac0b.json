{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\test\\\\kingfisher-kayaking\\\\src\\\\calendar\\\\index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Calendar, CalendarList, Agenda } from 'react-native-calendars';\nexport default function MyCalendar() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }\n  }, \"tesintg\");\n} // import moment from 'moment';\n// import './calendar.css';\n// export default function Calendar() {\n//     const [calendar , setCalendar] = useState([]);\n//     const [value , setValue] = useState(moment());\n//     const startDay = value.clone().startOf('month').startOf('week');\n//     const endDay = value.clone().endOf('month').endOf('week');\n//     useEffect(() => {\n//         const day = startDay.clone().subtract(1, 'day')\n//         const a = []\n//         while(day.isBefore(endDay, 'day')) {\n//             a.push(\n//                 Array(7)\n//                     .fill(0)\n//                     .map(() => day.add(1, 'day').clone())\n//             );\n//         }\n//         setCalendar(a);\n//     }, [value])\n//     return ( \n//         <div className='calendar'>\n//             {calendar.map((week) => (\n//                 <div>\n//                     {week.map((day) => (\n//                         <div  className='day' onClick={() => setValue(day)}>\n//                             <div  className={value.isSame(day, \"day\" ? \"selected\" : '')}>\n//                                     {day.format('D').toString()}\n//                             </div>\n//                         </div>\n//                     ))}\n//                 </div>\n//             ))}\n//         </div>\n//     );\n// }","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/test/kingfisher-kayaking/src/calendar/index.jsx"],"names":["React","useState","useEffect","Calendar","CalendarList","Agenda","MyCalendar"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,YAAlB,EAAgCC,MAAhC,QAA6C,wBAA7C;AAEA,eAAe,SAASC,UAAT,GAAsB;AACjC,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACH,C,CAGD;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Calendar, CalendarList, Agenda} from 'react-native-calendars';\r\n\r\nexport default function MyCalendar() {\r\n    return <div>tesintg</div>\r\n}\r\n\r\n\r\n// import moment from 'moment';\r\n// import './calendar.css';\r\n\r\n// export default function Calendar() {\r\n//     const [calendar , setCalendar] = useState([]);\r\n//     const [value , setValue] = useState(moment());\r\n    \r\n//     const startDay = value.clone().startOf('month').startOf('week');\r\n//     const endDay = value.clone().endOf('month').endOf('week');\r\n\r\n//     useEffect(() => {\r\n//         const day = startDay.clone().subtract(1, 'day')\r\n//         const a = []\r\n//         while(day.isBefore(endDay, 'day')) {\r\n//             a.push(\r\n//                 Array(7)\r\n//                     .fill(0)\r\n//                     .map(() => day.add(1, 'day').clone())\r\n//             );\r\n//         }\r\n//         setCalendar(a);\r\n//     }, [value])\r\n\r\n//     return ( \r\n//         <div className='calendar'>\r\n//             {calendar.map((week) => (\r\n//                 <div>\r\n//                     {week.map((day) => (\r\n//                         <div  className='day' onClick={() => setValue(day)}>\r\n//                             <div  className={value.isSame(day, \"day\" ? \"selected\" : '')}>\r\n//                                     {day.format('D').toString()}\r\n//                             </div>\r\n//                         </div>\r\n//                     ))}\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     );\r\n// }"]},"metadata":{},"sourceType":"module"}