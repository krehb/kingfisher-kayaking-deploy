{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jdk17\\\\Desktop\\\\KingFisher\\\\kingfisher-kayaking\\\\src\\\\Componets\\\\calendar\\\\renderKayaks.js\";\nexport default function renderKayaks(value, stock) {\n  console.log(stock);\n  let kayaksleft = stock; // dynamic Kayaks Option\n\n  let kayaksOptions = null; //rendering nonBooked days\n\n  let renderKayaksOptions = [];\n\n  for (let i = 0; i < kayaksInStock + 1; i++) {\n    renderKayaksOptions.push(i);\n    kayaksOptions = renderKayaksOptions.map(x => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 50\n      }\n    }, x));\n  } //rendering booked days\n\n\n  let datesBookArray = [];\n  let kayaksLeft = null;\n  let kayaksLeftArray = [];\n\n  const reducer = (accumulator, currentValue) => accumulator + currentValue; //when day is selected\n\n\n  kayaks.forEach(booking => {\n    if (value.isSame(booking.date, 'day')) {\n      let parsedKayaks = JSON.parse(booking.numOfKayaks);\n      datesBookArray.push(parsedKayaks);\n\n      if (datesBookArray.length > 1) {\n        // muliple bookings on single date\n        let kayaksBookedTotal = datesBookArray.reduce(reducer);\n        let calculatedLeft = kayaksInStock - kayaksBookedTotal;\n        kayaksLeft = calculatedLeft;\n      } else if (datesBookArray.length === 1) {\n        // single booking on single date\n        let calculatedLeft = kayaksInStock - parsedKayaks;\n        kayaksLeft = calculatedLeft;\n      }\n    }\n  }); // rendering the logic from above if selected day is booked\n\n  if (!(kayaksLeft === null)) {\n    for (let i = 0; i < kayaksLeft + 1; i++) {\n      kayaksLeftArray.push(i);\n    }\n\n    kayaksOptions = kayaksLeftArray.map(x => /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 50\n      }\n    }, x));\n  }\n\n  return kayaksLeft;\n}","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/src/Componets/calendar/renderKayaks.js"],"names":["renderKayaks","value","stock","console","log","kayaksleft","kayaksOptions","renderKayaksOptions","i","kayaksInStock","push","map","x","datesBookArray","kayaksLeft","kayaksLeftArray","reducer","accumulator","currentValue","kayaks","forEach","booking","isSame","date","parsedKayaks","JSON","parse","numOfKayaks","length","kayaksBookedTotal","reduce","calculatedLeft"],"mappings":";AAAA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,KAA7B,EAAoC;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAIG,UAAU,GAAGH,KAAjB,CAF+C,CAU/C;;AACF,MAAII,aAAa,GAAG,IAApB,CAXiD,CAajD;;AACA,MAAIC,mBAAmB,GAAG,EAA1B;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,aAAa,GAAG,CAApC,EAAuCD,CAAC,EAAxC,EAA2C;AACzCD,IAAAA,mBAAmB,CAACG,IAApB,CAAyBF,CAAzB;AACAF,IAAAA,aAAa,GAAGC,mBAAmB,CAACI,GAApB,CAAwBC,CAAC,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,CAAT,CAA7B,CAAhB;AACD,GAlBgD,CAqBjD;;;AACA,MAAIC,cAAc,GAAG,EAArB;AACA,MAAIC,UAAU,GAAG,IAAjB;AACA,MAAIC,eAAe,GAAG,EAAtB;;AACA,QAAMC,OAAO,GAAG,CAACC,WAAD,EAAcC,YAAd,KAA+BD,WAAW,GAAGC,YAA7D,CAzBiD,CA2B/C;;;AACAC,EAAAA,MAAM,CAACC,OAAP,CAAeC,OAAO,IAAI;AACtB,QAAIpB,KAAK,CAACqB,MAAN,CAAaD,OAAO,CAACE,IAArB,EAA2B,KAA3B,CAAJ,EAAwC;AACpC,UAAIC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACM,WAAnB,CAAnB;AACAd,MAAAA,cAAc,CAACH,IAAf,CAAoBc,YAApB;;AAEA,UAAGX,cAAc,CAACe,MAAf,GAAwB,CAA3B,EAA6B;AACzB;AACA,YAAIC,iBAAiB,GAAGhB,cAAc,CAACiB,MAAf,CAAsBd,OAAtB,CAAxB;AACA,YAAIe,cAAc,GAAGtB,aAAa,GAAGoB,iBAArC;AACAf,QAAAA,UAAU,GAAGiB,cAAb;AAEH,OAND,MAMO,IAAIlB,cAAc,CAACe,MAAf,KAA0B,CAA9B,EAAgC;AACnC;AACA,YAAIG,cAAc,GAAGtB,aAAa,GAAGe,YAArC;AACAV,QAAAA,UAAU,GAAGiB,cAAb;AACH;AACJ;AACJ,GAjBD,EA5B+C,CA+C/C;;AACA,MAAI,EAAEjB,UAAU,KAAK,IAAjB,CAAJ,EAA2B;AACvB,SAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,UAAU,GAAG,CAAjC,EAAoCN,CAAC,EAArC,EAAwC;AACpCO,MAAAA,eAAe,CAACL,IAAhB,CAAqBF,CAArB;AACH;;AACDF,IAAAA,aAAa,GAAGS,eAAe,CAACJ,GAAhB,CAAoBC,CAAC,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,CAAT,CAAzB,CAAhB;AACH;;AAkBD,SAAOE,UAAP;AACH","sourcesContent":["export default function renderKayaks(value, stock) {\r\n    console.log(stock)\r\n    let kayaksleft = stock\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // dynamic Kayaks Option\r\n  let kayaksOptions = null\r\n\r\n  //rendering nonBooked days\r\n  let renderKayaksOptions = []\r\n  for (let i = 0; i < kayaksInStock + 1; i++){\r\n    renderKayaksOptions.push(i)\r\n    kayaksOptions = renderKayaksOptions.map(x=> (<option>{x}</option>))\r\n  }\r\n\r\n\r\n  //rendering booked days\r\n  let datesBookArray = []\r\n  let kayaksLeft = null\r\n  let kayaksLeftArray = []\r\n  const reducer = (accumulator, currentValue) => accumulator + currentValue;\r\n\r\n    //when day is selected\r\n    kayaks.forEach(booking => {\r\n        if (value.isSame(booking.date, 'day') ) {\r\n            let parsedKayaks = JSON.parse(booking.numOfKayaks)\r\n            datesBookArray.push(parsedKayaks)\r\n\r\n            if(datesBookArray.length > 1){\r\n                // muliple bookings on single date\r\n                let kayaksBookedTotal = datesBookArray.reduce(reducer)\r\n                let calculatedLeft = kayaksInStock - kayaksBookedTotal\r\n                kayaksLeft = calculatedLeft\r\n\r\n            } else if (datesBookArray.length === 1){\r\n                // single booking on single date\r\n                let calculatedLeft = kayaksInStock - parsedKayaks\r\n                kayaksLeft = calculatedLeft\r\n            }\r\n        }\r\n    });\r\n\r\n    // rendering the logic from above if selected day is booked\r\n    if (!(kayaksLeft === null)){\r\n        for (let i = 0; i < kayaksLeft + 1; i++){\r\n            kayaksLeftArray.push(i)\r\n        }\r\n        kayaksOptions = kayaksLeftArray.map(x=> (<option>{x}</option>))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return kayaksLeft\r\n}"]},"metadata":{},"sourceType":"module"}