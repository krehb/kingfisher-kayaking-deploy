{"ast":null,"code":"/* Copyright (c) 2013 Rod Vagg, MIT License */\nfunction AbstractIterator(db) {\n  this.db = db;\n  this._ended = false;\n  this._nexting = false;\n}\n\nAbstractIterator.prototype.next = function (callback) {\n  var self = this;\n  if (typeof callback != 'function') throw new Error('next() requires a callback argument');\n  if (self._ended) return callback(new Error('cannot call next() after end()'));\n  if (self._nexting) return callback(new Error('cannot call next() before previous next() has completed'));\n  self._nexting = true;\n\n  if (typeof self._next == 'function') {\n    return self._next(function () {\n      self._nexting = false;\n      callback.apply(null, arguments);\n    });\n  }\n\n  process.nextTick(function () {\n    self._nexting = false;\n    callback();\n  });\n};\n\nAbstractIterator.prototype.end = function (callback) {\n  if (typeof callback != 'function') throw new Error('end() requires a callback argument');\n  if (this._ended) return callback(new Error('end() already called on iterator'));\n  this._ended = true;\n  if (typeof this._end == 'function') return this._end(callback);\n  process.nextTick(callback);\n};\n\nmodule.exports = AbstractIterator;","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/node_modules/abstract-leveldown/abstract-iterator.js"],"names":["AbstractIterator","db","_ended","_nexting","prototype","next","callback","self","Error","_next","apply","arguments","process","nextTick","end","_end","module","exports"],"mappings":"AAAA;AAEA,SAASA,gBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,OAAKA,EAAL,GAAUA,EAAV;AACA,OAAKC,MAAL,GAAc,KAAd;AACA,OAAKC,QAAL,GAAgB,KAAhB;AACD;;AAEDH,gBAAgB,CAACI,SAAjB,CAA2BC,IAA3B,GAAkC,UAAUC,QAAV,EAAoB;AACpD,MAAIC,IAAI,GAAG,IAAX;AAEA,MAAI,OAAOD,QAAP,IAAmB,UAAvB,EACE,MAAM,IAAIE,KAAJ,CAAU,qCAAV,CAAN;AAEF,MAAID,IAAI,CAACL,MAAT,EACE,OAAOI,QAAQ,CAAC,IAAIE,KAAJ,CAAU,gCAAV,CAAD,CAAf;AACF,MAAID,IAAI,CAACJ,QAAT,EACE,OAAOG,QAAQ,CAAC,IAAIE,KAAJ,CAAU,yDAAV,CAAD,CAAf;AAEFD,EAAAA,IAAI,CAACJ,QAAL,GAAgB,IAAhB;;AACA,MAAI,OAAOI,IAAI,CAACE,KAAZ,IAAqB,UAAzB,EAAqC;AACnC,WAAOF,IAAI,CAACE,KAAL,CAAW,YAAY;AAC5BF,MAAAA,IAAI,CAACJ,QAAL,GAAgB,KAAhB;AACAG,MAAAA,QAAQ,CAACI,KAAT,CAAe,IAAf,EAAqBC,SAArB;AACD,KAHM,CAAP;AAID;;AAEDC,EAAAA,OAAO,CAACC,QAAR,CAAiB,YAAY;AAC3BN,IAAAA,IAAI,CAACJ,QAAL,GAAgB,KAAhB;AACAG,IAAAA,QAAQ;AACT,GAHD;AAID,CAvBD;;AAyBAN,gBAAgB,CAACI,SAAjB,CAA2BU,GAA3B,GAAiC,UAAUR,QAAV,EAAoB;AACnD,MAAI,OAAOA,QAAP,IAAmB,UAAvB,EACE,MAAM,IAAIE,KAAJ,CAAU,oCAAV,CAAN;AAEF,MAAI,KAAKN,MAAT,EACE,OAAOI,QAAQ,CAAC,IAAIE,KAAJ,CAAU,kCAAV,CAAD,CAAf;AAEF,OAAKN,MAAL,GAAc,IAAd;AAEA,MAAI,OAAO,KAAKa,IAAZ,IAAoB,UAAxB,EACE,OAAO,KAAKA,IAAL,CAAUT,QAAV,CAAP;AAEFM,EAAAA,OAAO,CAACC,QAAR,CAAiBP,QAAjB;AACD,CAbD;;AAeAU,MAAM,CAACC,OAAP,GAAiBjB,gBAAjB","sourcesContent":["/* Copyright (c) 2013 Rod Vagg, MIT License */\n\nfunction AbstractIterator (db) {\n  this.db = db\n  this._ended = false\n  this._nexting = false\n}\n\nAbstractIterator.prototype.next = function (callback) {\n  var self = this\n\n  if (typeof callback != 'function')\n    throw new Error('next() requires a callback argument')\n\n  if (self._ended)\n    return callback(new Error('cannot call next() after end()'))\n  if (self._nexting)\n    return callback(new Error('cannot call next() before previous next() has completed'))\n\n  self._nexting = true\n  if (typeof self._next == 'function') {\n    return self._next(function () {\n      self._nexting = false\n      callback.apply(null, arguments)\n    })\n  }\n\n  process.nextTick(function () {\n    self._nexting = false\n    callback()\n  })\n}\n\nAbstractIterator.prototype.end = function (callback) {\n  if (typeof callback != 'function')\n    throw new Error('end() requires a callback argument')\n\n  if (this._ended)\n    return callback(new Error('end() already called on iterator'))\n\n  this._ended = true\n\n  if (typeof this._end == 'function')\n    return this._end(callback)\n\n  process.nextTick(callback)\n}\n\nmodule.exports = AbstractIterator\n"]},"metadata":{},"sourceType":"script"}