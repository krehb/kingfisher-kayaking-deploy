{"ast":null,"code":"var Writable = require('readable-stream/writable');\n\nvar Readable = require('readable-stream/readable');\n\nvar peek = require('level-peek');\n\nvar util = require('util');\n\nvar once = require('once');\n\nvar EMPTY = new Buffer(0);\nvar ENCODER = {\n  encode: function (data) {\n    return typeof data === 'string' ? data = new Buffer(data) : data;\n  },\n  decode: function (data) {\n    return Buffer.isBuffer(data) ? data : new Buffer(data);\n  },\n  buffer: true,\n  type: 'raw'\n};\n\nvar noop = function () {};\n\nvar pad = function (n) {\n  n = n.toString(16);\n  return '00000000'.slice(0, -n.length) + n;\n};\n\nvar expand = function (buf, len) {\n  var tmp = new Buffer(len);\n  buf.copy(tmp);\n  return tmp;\n};\n\nmodule.exports = function (db, opts) {\n  if (!opts) opts = {};\n  var blobs = {};\n  var blockSize = opts.blockSize || 65536;\n  var maxBatch = opts.batch || 100;\n  var blank = new Buffer(blockSize);\n  db.put('\\x00', 'ignore', noop); // memdown#12 workaround\n\n  var reservations = {};\n\n  var mutateBlock = function (key, offset, block, append, cb) {\n    var release = function () {\n      if (! --reservations[key].locks) delete reservations[key];\n    };\n\n    var onreservation = function (r) {\n      r.locks++;\n\n      if (!r.block && !offset) {\n        r.block = block;\n        cb(null, r.block, release);\n        return;\n      }\n\n      if (!r.block) r.block = new Buffer(blockSize);\n      if (r.block.length < offset + block.length) r.block = expand(r.block, offset + block.length);\n      block.copy(r.block, offset);\n      if (!append && offset + block.length < r.block.length) r.block = r.block.slice(0, offset + block.length);\n      cb(null, r.block, release);\n    };\n\n    if (reservations[key]) return onreservation(reservations[key]);\n    db.get(key, {\n      valueEncoding: ENCODER\n    }, function (err, block) {\n      if (err && !err.notFound) return cb(err);\n      if (!reservations[key]) reservations[key] = {\n        locks: 0,\n        block: block\n      };\n      onreservation(reservations[key]);\n    });\n  };\n\n  var WriteStream = function (name, opts) {\n    if (!(this instanceof WriteStream)) return new WriteStream(name, opts);\n    if (!opts) opts = {};\n    this.name = name;\n    this.blocks = [];\n    this.batch = [];\n    this.bytesWritten = 0;\n    this.truncate = !opts.append;\n    this.append = opts.append;\n    this._shouldInitAppend = this.append && opts.start === undefined;\n    this._destroyed = false;\n\n    this._init(opts.start || 0);\n\n    Writable.call(this);\n  };\n\n  util.inherits(WriteStream, Writable);\n\n  WriteStream.prototype._init = function (start) {\n    this.blockIndex = start / blockSize | 0;\n    this.blockOffset = start - this.blockIndex * blockSize;\n    this.blockLength = this.blockOffset;\n  };\n\n  WriteStream.prototype._flush = function (cb) {\n    if (!this.batch.length) return cb();\n    var key = this.batch[this.batch.length - 1].key;\n    var batch = this.batch;\n    this.batch = [];\n    if (!this.truncate) return db.batch(batch, cb);\n    this.truncate = false;\n\n    this._truncate(batch, key, cb);\n  };\n\n  WriteStream.prototype._truncate = function (batch, key, cb) {\n    cb = once(cb);\n    var dels = [];\n    var keys = db.createKeyStream({\n      start: key,\n      end: this.name + '\\xff\\xff'\n    });\n    keys.on('error', cb);\n    keys.on('data', function (key) {\n      dels.push({\n        type: 'del',\n        key: key\n      });\n    });\n    keys.on('end', function () {\n      dels.push.apply(dels, batch);\n      db.batch(dels, cb);\n    });\n  };\n\n  WriteStream.prototype._writeBlock = function (cb) {\n    var block = this.blocks.length === 1 ? this.blocks[0] : Buffer.concat(this.blocks, this.blockLength - this.blockOffset);\n    var index = this.blockIndex;\n    var offset = this.blockOffset;\n    var self = this;\n    this.blockOffset = 0;\n    this.blockLength = 0;\n    this.blockIndex++;\n    this.blocks = [];\n    var key = this.name + '\\xff' + pad(index);\n\n    var append = function (block, force, cb) {\n      if (block.length) {\n        self.batch.push({\n          type: 'put',\n          key: key,\n          value: block,\n          valueEncoding: ENCODER\n        });\n      }\n\n      if (!force && self.batch.length < maxBatch) return cb();\n      return self._flush(cb);\n    };\n\n    if (!offset && block.length === blockSize) return append(block, false, cb);\n    if (!offset && !this.append) return append(block, false, cb); // partial write\n\n    mutateBlock(key, offset, block, this.append, function (err, block, release) {\n      if (err) return cb(err);\n      append(block, true, function (err) {\n        release();\n        cb(err);\n      });\n    });\n  };\n\n  WriteStream.prototype._initAppend = function (data, enc, cb) {\n    var self = this;\n    this._shouldInitAppend = false;\n    blobs.size(this.name, function (err, size) {\n      if (err) return cb(err);\n\n      self._init(size);\n\n      self._write(data, enc, cb);\n    });\n  };\n\n  WriteStream.prototype._write = function (data, enc, cb) {\n    if (!data.length || this._destroyed) return cb();\n    if (this._shouldInitAppend) return this._initAppend(data, enc, cb);\n    var self = this;\n    var overflow;\n    var free = blockSize - this.blockLength;\n\n    var done = function (err) {\n      if (err) return cb(err);\n      if (overflow) return self._write(overflow, enc, cb);\n      cb();\n    };\n\n    if (data.length > free) {\n      overflow = data.slice(free);\n      data = data.slice(0, free);\n    }\n\n    this.bytesWritten += data.length;\n    this.blockLength += data.length;\n    this.blocks.push(data);\n    if (data.length < free) return done();\n\n    this._writeBlock(done);\n  };\n\n  WriteStream.prototype.destroy = function () {\n    if (this._destroyed) return;\n    this._destroyed = true;\n    process.nextTick(this.emit.bind(this, 'close'));\n  };\n\n  WriteStream.prototype.end = function (data) {\n    var self = this;\n    var args = arguments;\n\n    if (data && typeof data !== 'function') {\n      this.write(data);\n      data = EMPTY;\n    }\n\n    this.write(EMPTY, function () {\n      self._writeBlock(function (err) {\n        if (err) return self.emit('error', err);\n\n        self._flush(function (err) {\n          if (err) return self.emit('error', err);\n          Writable.prototype.end.apply(self, args);\n        });\n      });\n    });\n  };\n\n  var ReadStream = function (name, opts) {\n    if (!opts) opts = {};\n    var self = this;\n    var start = opts.start || 0;\n    var blockIndex = start / blockSize | 0;\n    var blockOffset = start - blockIndex * blockSize;\n    var key = name + '\\xff' + pad(blockIndex);\n    this.name = name;\n    this._missing = (typeof opts.end === 'number' ? opts.end : Infinity) - start + 1;\n    this._paused = false;\n    this._destroyed = false;\n    this._reader = db.createReadStream({\n      start: key,\n      end: name + '\\xff\\xff',\n      valueEncoding: ENCODER\n    });\n\n    var onblock = function (val) {\n      key = name + '\\xff' + pad(++blockIndex);\n      if (!self._missing) return false;\n\n      if (blockOffset) {\n        val = val.slice(blockOffset);\n        blockOffset = 0;\n        if (!val.length) return true;\n      }\n\n      if (val.length > self._missing) val = val.slice(0, self._missing);\n      self._missing -= val.length;\n\n      self._pause(!self.push(val));\n\n      return !!self._missing;\n    };\n\n    this._reader.on('data', function (data) {\n      while (data.key > key) {\n        if (!onblock(blank)) return;\n      }\n\n      onblock(data.value);\n    });\n\n    this._reader.on('error', function (err) {\n      self.emit('error', err);\n    });\n\n    this._reader.on('end', function () {\n      self.push(null);\n    });\n\n    Readable.call(this);\n  };\n\n  util.inherits(ReadStream, Readable);\n\n  ReadStream.prototype.destroy = function () {\n    if (this._destroyed) return;\n    this._destroyed = true;\n\n    this._reader.destroy();\n\n    process.nextTick(this.emit.bind(this, 'close'));\n  };\n\n  ReadStream.prototype._pause = function (paused) {\n    if (this._paused === paused) return;\n    this._paused = paused;\n    if (this._paused) this._reader.pause();else this._reader.resume();\n  };\n\n  ReadStream.prototype._read = function () {\n    this._pause(false);\n  };\n\n  blobs.remove = function (name, cb) {\n    cb = once(cb || noop);\n    var batch = [];\n    var keys = db.createKeyStream({\n      start: name + '\\xff',\n      end: name + '\\xff\\xff'\n    });\n    keys.on('error', cb);\n    keys.on('data', function (key) {\n      batch.push({\n        type: 'del',\n        key: key\n      });\n    });\n    keys.on('end', function () {\n      db.batch(batch, cb);\n    });\n  };\n\n  blobs.size = function (name, cb) {\n    peek.last(db, {\n      start: name + '\\xff',\n      end: name + '\\xff\\xff',\n      valueEncoding: ENCODER\n    }, function (err, latest, val) {\n      if (err && err.message === 'range not found') return cb(null, 0);\n      if (err) return cb(err);\n      if (latest.slice(0, name.length + 1) !== name + '\\xff') return cb(null, 0);\n      cb(null, parseInt(latest.toString().slice(name.length + 1), 16) * blockSize + val.length);\n    });\n  };\n\n  blobs.write = function (name, data, opts, cb) {\n    if (typeof opts === 'function') return blobs.write(name, data, null, opts);\n    if (!opts) opts = {};\n    if (!cb) cb = noop;\n    var ws = blobs.createWriteStream(name, opts);\n    ws.on('error', cb);\n    ws.on('finish', function () {\n      cb();\n    });\n    ws.write(data);\n    ws.end();\n  };\n\n  blobs.read = function (name, opts, cb) {\n    if (typeof opts === 'function') return blobs.read(name, null, opts);\n    if (!opts) opts = {};\n    var rs = blobs.createReadStream(name, opts);\n    var list = [];\n    rs.on('error', cb);\n    rs.on('data', function (data) {\n      list.push(data);\n    });\n    rs.on('end', function () {\n      cb(null, list.length === 1 ? list[0] : Buffer.concat(list));\n    });\n  };\n\n  blobs.createReadStream = function (name, opts) {\n    return new ReadStream(name, opts);\n  };\n\n  blobs.createWriteStream = function (name, opts) {\n    return new WriteStream(name, opts);\n  };\n\n  return blobs;\n};","map":{"version":3,"sources":["C:/Users/jdk17/Desktop/KingFisher/kingfisher-kayaking/node_modules/level-blobs/index.js"],"names":["Writable","require","Readable","peek","util","once","EMPTY","Buffer","ENCODER","encode","data","decode","isBuffer","buffer","type","noop","pad","n","toString","slice","length","expand","buf","len","tmp","copy","module","exports","db","opts","blobs","blockSize","maxBatch","batch","blank","put","reservations","mutateBlock","key","offset","block","append","cb","release","locks","onreservation","r","get","valueEncoding","err","notFound","WriteStream","name","blocks","bytesWritten","truncate","_shouldInitAppend","start","undefined","_destroyed","_init","call","inherits","prototype","blockIndex","blockOffset","blockLength","_flush","_truncate","dels","keys","createKeyStream","end","on","push","apply","_writeBlock","concat","index","self","force","value","_initAppend","enc","size","_write","overflow","free","done","destroy","process","nextTick","emit","bind","args","arguments","write","ReadStream","_missing","Infinity","_paused","_reader","createReadStream","onblock","val","_pause","paused","pause","resume","_read","remove","last","latest","message","parseInt","ws","createWriteStream","read","rs","list"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,0BAAD,CAAtB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAAlB;;AACA,IAAII,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIK,KAAK,GAAG,IAAIC,MAAJ,CAAW,CAAX,CAAZ;AACA,IAAIC,OAAO,GAAG;AACbC,EAAAA,MAAM,EAAE,UAASC,IAAT,EAAe;AACtB,WAAO,OAAOA,IAAP,KAAgB,QAAhB,GAA2BA,IAAI,GAAG,IAAIH,MAAJ,CAAWG,IAAX,CAAlC,GAAqDA,IAA5D;AACA,GAHY;AAIbC,EAAAA,MAAM,EAAE,UAASD,IAAT,EAAe;AACtB,WAAOH,MAAM,CAACK,QAAP,CAAgBF,IAAhB,IAAwBA,IAAxB,GAA+B,IAAIH,MAAJ,CAAWG,IAAX,CAAtC;AACA,GANY;AAObG,EAAAA,MAAM,EAAE,IAPK;AAQbC,EAAAA,IAAI,EAAE;AARO,CAAd;;AAWA,IAAIC,IAAI,GAAG,YAAW,CAAE,CAAxB;;AAEA,IAAIC,GAAG,GAAG,UAASC,CAAT,EAAY;AACrBA,EAAAA,CAAC,GAAGA,CAAC,CAACC,QAAF,CAAW,EAAX,CAAJ;AACA,SAAO,WAAWC,KAAX,CAAiB,CAAjB,EAAoB,CAACF,CAAC,CAACG,MAAvB,IAA+BH,CAAtC;AACA,CAHD;;AAKA,IAAII,MAAM,GAAG,UAASC,GAAT,EAAcC,GAAd,EAAmB;AAC/B,MAAIC,GAAG,GAAG,IAAIjB,MAAJ,CAAWgB,GAAX,CAAV;AACAD,EAAAA,GAAG,CAACG,IAAJ,CAASD,GAAT;AACA,SAAOA,GAAP;AACA,CAJD;;AAMAE,MAAM,CAACC,OAAP,GAAiB,UAASC,EAAT,EAAaC,IAAb,EAAmB;AACnC,MAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AAEX,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAIC,SAAS,GAAGF,IAAI,CAACE,SAAL,IAAkB,KAAlC;AACA,MAAIC,QAAQ,GAAGH,IAAI,CAACI,KAAL,IAAc,GAA7B;AACA,MAAIC,KAAK,GAAG,IAAI3B,MAAJ,CAAWwB,SAAX,CAAZ;AAEAH,EAAAA,EAAE,CAACO,GAAH,CAAO,MAAP,EAAe,QAAf,EAAyBpB,IAAzB,EATmC,CASH;;AAEhC,MAAIqB,YAAY,GAAG,EAAnB;;AACA,MAAIC,WAAW,GAAG,UAASC,GAAT,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,EAArC,EAAyC;AAC1D,QAAIC,OAAO,GAAG,YAAW;AACxB,UAAI,CAAC,GAAEP,YAAY,CAACE,GAAD,CAAZ,CAAkBM,KAAzB,EAAgC,OAAOR,YAAY,CAACE,GAAD,CAAnB;AAChC,KAFD;;AAIA,QAAIO,aAAa,GAAG,UAASC,CAAT,EAAY;AAC/BA,MAAAA,CAAC,CAACF,KAAF;;AAEA,UAAI,CAACE,CAAC,CAACN,KAAH,IAAY,CAACD,MAAjB,EAAyB;AACxBO,QAAAA,CAAC,CAACN,KAAF,GAAUA,KAAV;AACAE,QAAAA,EAAE,CAAC,IAAD,EAAOI,CAAC,CAACN,KAAT,EAAgBG,OAAhB,CAAF;AACA;AACA;;AAED,UAAI,CAACG,CAAC,CAACN,KAAP,EAAcM,CAAC,CAACN,KAAF,GAAU,IAAIjC,MAAJ,CAAWwB,SAAX,CAAV;AACd,UAAIe,CAAC,CAACN,KAAF,CAAQpB,MAAR,GAAiBmB,MAAM,GAAGC,KAAK,CAACpB,MAApC,EAA4C0B,CAAC,CAACN,KAAF,GAAUnB,MAAM,CAACyB,CAAC,CAACN,KAAH,EAAUD,MAAM,GAAGC,KAAK,CAACpB,MAAzB,CAAhB;AAE5CoB,MAAAA,KAAK,CAACf,IAAN,CAAWqB,CAAC,CAACN,KAAb,EAAoBD,MAApB;AAEA,UAAI,CAACE,MAAD,IAAWF,MAAM,GAAGC,KAAK,CAACpB,MAAf,GAAwB0B,CAAC,CAACN,KAAF,CAAQpB,MAA/C,EAAuD0B,CAAC,CAACN,KAAF,GAAUM,CAAC,CAACN,KAAF,CAAQrB,KAAR,CAAc,CAAd,EAAiBoB,MAAM,GAACC,KAAK,CAACpB,MAA9B,CAAV;AACvDsB,MAAAA,EAAE,CAAC,IAAD,EAAOI,CAAC,CAACN,KAAT,EAAgBG,OAAhB,CAAF;AACA,KAhBD;;AAkBA,QAAIP,YAAY,CAACE,GAAD,CAAhB,EAAuB,OAAOO,aAAa,CAACT,YAAY,CAACE,GAAD,CAAb,CAApB;AAEvBV,IAAAA,EAAE,CAACmB,GAAH,CAAOT,GAAP,EAAY;AAACU,MAAAA,aAAa,EAACxC;AAAf,KAAZ,EAAqC,UAASyC,GAAT,EAAcT,KAAd,EAAqB;AACzD,UAAIS,GAAG,IAAI,CAACA,GAAG,CAACC,QAAhB,EAA0B,OAAOR,EAAE,CAACO,GAAD,CAAT;AAC1B,UAAI,CAACb,YAAY,CAACE,GAAD,CAAjB,EAAwBF,YAAY,CAACE,GAAD,CAAZ,GAAoB;AAACM,QAAAA,KAAK,EAAC,CAAP;AAAUJ,QAAAA,KAAK,EAACA;AAAhB,OAApB;AACxBK,MAAAA,aAAa,CAACT,YAAY,CAACE,GAAD,CAAb,CAAb;AACA,KAJD;AAKA,GA9BD;;AAgCA,MAAIa,WAAW,GAAG,UAASC,IAAT,EAAevB,IAAf,EAAqB;AACtC,QAAI,EAAE,gBAAgBsB,WAAlB,CAAJ,EAAoC,OAAO,IAAIA,WAAJ,CAAgBC,IAAhB,EAAsBvB,IAAtB,CAAP;AACpC,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AAEX,SAAKuB,IAAL,GAAYA,IAAZ;AACA,SAAKC,MAAL,GAAc,EAAd;AACA,SAAKpB,KAAL,GAAa,EAAb;AACA,SAAKqB,YAAL,GAAoB,CAApB;AACA,SAAKC,QAAL,GAAgB,CAAC1B,IAAI,CAACY,MAAtB;AACA,SAAKA,MAAL,GAAcZ,IAAI,CAACY,MAAnB;AAEA,SAAKe,iBAAL,GAAyB,KAAKf,MAAL,IAAeZ,IAAI,CAAC4B,KAAL,KAAeC,SAAvD;AACA,SAAKC,UAAL,GAAkB,KAAlB;;AACA,SAAKC,KAAL,CAAW/B,IAAI,CAAC4B,KAAL,IAAc,CAAzB;;AAEAzD,IAAAA,QAAQ,CAAC6D,IAAT,CAAc,IAAd;AACA,GAhBD;;AAkBAzD,EAAAA,IAAI,CAAC0D,QAAL,CAAcX,WAAd,EAA2BnD,QAA3B;;AAEAmD,EAAAA,WAAW,CAACY,SAAZ,CAAsBH,KAAtB,GAA8B,UAASH,KAAT,EAAgB;AAC7C,SAAKO,UAAL,GAAmBP,KAAK,GAAG1B,SAAT,GAAsB,CAAxC;AACA,SAAKkC,WAAL,GAAmBR,KAAK,GAAG,KAAKO,UAAL,GAAkBjC,SAA7C;AACA,SAAKmC,WAAL,GAAmB,KAAKD,WAAxB;AACA,GAJD;;AAMAd,EAAAA,WAAW,CAACY,SAAZ,CAAsBI,MAAtB,GAA+B,UAASzB,EAAT,EAAa;AAC3C,QAAI,CAAC,KAAKT,KAAL,CAAWb,MAAhB,EAAwB,OAAOsB,EAAE,EAAT;AAExB,QAAIJ,GAAG,GAAG,KAAKL,KAAL,CAAW,KAAKA,KAAL,CAAWb,MAAX,GAAkB,CAA7B,EAAgCkB,GAA1C;AACA,QAAIL,KAAK,GAAG,KAAKA,KAAjB;AACA,SAAKA,KAAL,GAAa,EAAb;AAEA,QAAI,CAAC,KAAKsB,QAAV,EAAoB,OAAO3B,EAAE,CAACK,KAAH,CAASA,KAAT,EAAgBS,EAAhB,CAAP;AACpB,SAAKa,QAAL,GAAgB,KAAhB;;AACA,SAAKa,SAAL,CAAenC,KAAf,EAAsBK,GAAtB,EAA2BI,EAA3B;AACA,GAVD;;AAYAS,EAAAA,WAAW,CAACY,SAAZ,CAAsBK,SAAtB,GAAkC,UAASnC,KAAT,EAAgBK,GAAhB,EAAqBI,EAArB,EAAyB;AAC1DA,IAAAA,EAAE,GAAGrC,IAAI,CAACqC,EAAD,CAAT;AAEA,QAAI2B,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG1C,EAAE,CAAC2C,eAAH,CAAmB;AAC7Bd,MAAAA,KAAK,EAAEnB,GADsB;AAE7BkC,MAAAA,GAAG,EAAE,KAAKpB,IAAL,GAAU;AAFc,KAAnB,CAAX;AAKAkB,IAAAA,IAAI,CAACG,EAAL,CAAQ,OAAR,EAAiB/B,EAAjB;AAEA4B,IAAAA,IAAI,CAACG,EAAL,CAAQ,MAAR,EAAgB,UAASnC,GAAT,EAAc;AAC7B+B,MAAAA,IAAI,CAACK,IAAL,CAAU;AAAC5D,QAAAA,IAAI,EAAC,KAAN;AAAawB,QAAAA,GAAG,EAACA;AAAjB,OAAV;AACA,KAFD;AAIAgC,IAAAA,IAAI,CAACG,EAAL,CAAQ,KAAR,EAAe,YAAW;AACzBJ,MAAAA,IAAI,CAACK,IAAL,CAAUC,KAAV,CAAgBN,IAAhB,EAAsBpC,KAAtB;AACAL,MAAAA,EAAE,CAACK,KAAH,CAASoC,IAAT,EAAe3B,EAAf;AACA,KAHD;AAIA,GAnBD;;AAqBAS,EAAAA,WAAW,CAACY,SAAZ,CAAsBa,WAAtB,GAAoC,UAASlC,EAAT,EAAa;AAChD,QAAIF,KAAK,GAAG,KAAKa,MAAL,CAAYjC,MAAZ,KAAuB,CAAvB,GAA2B,KAAKiC,MAAL,CAAY,CAAZ,CAA3B,GAA4C9C,MAAM,CAACsE,MAAP,CAAc,KAAKxB,MAAnB,EAA2B,KAAKa,WAAL,GAAmB,KAAKD,WAAnD,CAAxD;AACA,QAAIa,KAAK,GAAG,KAAKd,UAAjB;AACA,QAAIzB,MAAM,GAAG,KAAK0B,WAAlB;AACA,QAAIc,IAAI,GAAG,IAAX;AAEA,SAAKd,WAAL,GAAmB,CAAnB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKF,UAAL;AACA,SAAKX,MAAL,GAAc,EAAd;AAEA,QAAIf,GAAG,GAAG,KAAKc,IAAL,GAAU,MAAV,GAAiBpC,GAAG,CAAC8D,KAAD,CAA9B;;AAEA,QAAIrC,MAAM,GAAG,UAASD,KAAT,EAAgBwC,KAAhB,EAAuBtC,EAAvB,EAA2B;AACvC,UAAIF,KAAK,CAACpB,MAAV,EAAkB;AACjB2D,QAAAA,IAAI,CAAC9C,KAAL,CAAWyC,IAAX,CAAgB;AACf5D,UAAAA,IAAI,EAAE,KADS;AAEfwB,UAAAA,GAAG,EAAEA,GAFU;AAGf2C,UAAAA,KAAK,EAAEzC,KAHQ;AAIfQ,UAAAA,aAAa,EAAExC;AAJA,SAAhB;AAMA;;AAED,UAAI,CAACwE,KAAD,IAAUD,IAAI,CAAC9C,KAAL,CAAWb,MAAX,GAAoBY,QAAlC,EAA4C,OAAOU,EAAE,EAAT;AAC5C,aAAOqC,IAAI,CAACZ,MAAL,CAAYzB,EAAZ,CAAP;AACA,KAZD;;AAcA,QAAI,CAACH,MAAD,IAAWC,KAAK,CAACpB,MAAN,KAAiBW,SAAhC,EAA2C,OAAOU,MAAM,CAACD,KAAD,EAAQ,KAAR,EAAeE,EAAf,CAAb;AAC3C,QAAI,CAACH,MAAD,IAAW,CAAC,KAAKE,MAArB,EAA6B,OAAOA,MAAM,CAACD,KAAD,EAAQ,KAAR,EAAeE,EAAf,CAAb,CA5BmB,CA8BhD;;AACAL,IAAAA,WAAW,CAACC,GAAD,EAAMC,MAAN,EAAcC,KAAd,EAAqB,KAAKC,MAA1B,EAAkC,UAASQ,GAAT,EAAcT,KAAd,EAAqBG,OAArB,EAA8B;AAC1E,UAAIM,GAAJ,EAAS,OAAOP,EAAE,CAACO,GAAD,CAAT;AACTR,MAAAA,MAAM,CAACD,KAAD,EAAQ,IAAR,EAAc,UAASS,GAAT,EAAc;AACjCN,QAAAA,OAAO;AACPD,QAAAA,EAAE,CAACO,GAAD,CAAF;AACA,OAHK,CAAN;AAIA,KANU,CAAX;AAOA,GAtCD;;AAwCAE,EAAAA,WAAW,CAACY,SAAZ,CAAsBmB,WAAtB,GAAoC,UAASxE,IAAT,EAAeyE,GAAf,EAAoBzC,EAApB,EAAwB;AAC3D,QAAIqC,IAAI,GAAG,IAAX;AACA,SAAKvB,iBAAL,GAAyB,KAAzB;AACA1B,IAAAA,KAAK,CAACsD,IAAN,CAAW,KAAKhC,IAAhB,EAAsB,UAASH,GAAT,EAAcmC,IAAd,EAAoB;AACzC,UAAInC,GAAJ,EAAS,OAAOP,EAAE,CAACO,GAAD,CAAT;;AACT8B,MAAAA,IAAI,CAACnB,KAAL,CAAWwB,IAAX;;AACAL,MAAAA,IAAI,CAACM,MAAL,CAAY3E,IAAZ,EAAkByE,GAAlB,EAAuBzC,EAAvB;AACA,KAJD;AAKA,GARD;;AAUAS,EAAAA,WAAW,CAACY,SAAZ,CAAsBsB,MAAtB,GAA+B,UAAS3E,IAAT,EAAeyE,GAAf,EAAoBzC,EAApB,EAAwB;AACtD,QAAI,CAAChC,IAAI,CAACU,MAAN,IAAgB,KAAKuC,UAAzB,EAAqC,OAAOjB,EAAE,EAAT;AACrC,QAAI,KAAKc,iBAAT,EAA4B,OAAO,KAAK0B,WAAL,CAAiBxE,IAAjB,EAAuByE,GAAvB,EAA4BzC,EAA5B,CAAP;AAE5B,QAAIqC,IAAI,GAAG,IAAX;AACA,QAAIO,QAAJ;AACA,QAAIC,IAAI,GAAGxD,SAAS,GAAG,KAAKmC,WAA5B;;AAEA,QAAIsB,IAAI,GAAG,UAASvC,GAAT,EAAc;AACxB,UAAIA,GAAJ,EAAS,OAAOP,EAAE,CAACO,GAAD,CAAT;AACT,UAAIqC,QAAJ,EAAc,OAAOP,IAAI,CAACM,MAAL,CAAYC,QAAZ,EAAsBH,GAAtB,EAA2BzC,EAA3B,CAAP;AACdA,MAAAA,EAAE;AACF,KAJD;;AAMA,QAAIhC,IAAI,CAACU,MAAL,GAAcmE,IAAlB,EAAwB;AACvBD,MAAAA,QAAQ,GAAG5E,IAAI,CAACS,KAAL,CAAWoE,IAAX,CAAX;AACA7E,MAAAA,IAAI,GAAGA,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcoE,IAAd,CAAP;AACA;;AAED,SAAKjC,YAAL,IAAqB5C,IAAI,CAACU,MAA1B;AACA,SAAK8C,WAAL,IAAoBxD,IAAI,CAACU,MAAzB;AACA,SAAKiC,MAAL,CAAYqB,IAAZ,CAAiBhE,IAAjB;AAEA,QAAIA,IAAI,CAACU,MAAL,GAAcmE,IAAlB,EAAwB,OAAOC,IAAI,EAAX;;AACxB,SAAKZ,WAAL,CAAiBY,IAAjB;AACA,GAzBD;;AA2BArC,EAAAA,WAAW,CAACY,SAAZ,CAAsB0B,OAAtB,GAAgC,YAAW;AAC1C,QAAI,KAAK9B,UAAT,EAAqB;AACrB,SAAKA,UAAL,GAAkB,IAAlB;AACA+B,IAAAA,OAAO,CAACC,QAAR,CAAiB,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,EAAqB,OAArB,CAAjB;AACA,GAJD;;AAMA1C,EAAAA,WAAW,CAACY,SAAZ,CAAsBS,GAAtB,GAA4B,UAAS9D,IAAT,EAAe;AAC1C,QAAIqE,IAAI,GAAG,IAAX;AACA,QAAIe,IAAI,GAAGC,SAAX;;AAEA,QAAIrF,IAAI,IAAI,OAAOA,IAAP,KAAgB,UAA5B,EAAwC;AACvC,WAAKsF,KAAL,CAAWtF,IAAX;AACAA,MAAAA,IAAI,GAAGJ,KAAP;AACA;;AAED,SAAK0F,KAAL,CAAW1F,KAAX,EAAkB,YAAW;AAC5ByE,MAAAA,IAAI,CAACH,WAAL,CAAiB,UAAS3B,GAAT,EAAc;AAC9B,YAAIA,GAAJ,EAAS,OAAO8B,IAAI,CAACa,IAAL,CAAU,OAAV,EAAmB3C,GAAnB,CAAP;;AACT8B,QAAAA,IAAI,CAACZ,MAAL,CAAY,UAASlB,GAAT,EAAc;AACzB,cAAIA,GAAJ,EAAS,OAAO8B,IAAI,CAACa,IAAL,CAAU,OAAV,EAAmB3C,GAAnB,CAAP;AACTjD,UAAAA,QAAQ,CAAC+D,SAAT,CAAmBS,GAAnB,CAAuBG,KAAvB,CAA6BI,IAA7B,EAAmCe,IAAnC;AACA,SAHD;AAIA,OAND;AAOA,KARD;AASA,GAlBD;;AAoBA,MAAIG,UAAU,GAAG,UAAS7C,IAAT,EAAevB,IAAf,EAAqB;AACrC,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AAEX,QAAIkD,IAAI,GAAG,IAAX;AAEA,QAAItB,KAAK,GAAG5B,IAAI,CAAC4B,KAAL,IAAc,CAA1B;AACA,QAAIO,UAAU,GAAIP,KAAK,GAAG1B,SAAT,GAAsB,CAAvC;AACA,QAAIkC,WAAW,GAAGR,KAAK,GAAGO,UAAU,GAAGjC,SAAvC;AACA,QAAIO,GAAG,GAAGc,IAAI,GAAC,MAAL,GAAYpC,GAAG,CAACgD,UAAD,CAAzB;AAEA,SAAKZ,IAAL,GAAYA,IAAZ;AACA,SAAK8C,QAAL,GAAgB,CAAC,OAAOrE,IAAI,CAAC2C,GAAZ,KAAoB,QAApB,GAA+B3C,IAAI,CAAC2C,GAApC,GAA0C2B,QAA3C,IAAuD1C,KAAvD,GAA+D,CAA/E;AACA,SAAK2C,OAAL,GAAe,KAAf;AACA,SAAKzC,UAAL,GAAkB,KAAlB;AAEA,SAAK0C,OAAL,GAAezE,EAAE,CAAC0E,gBAAH,CAAoB;AAClC7C,MAAAA,KAAK,EAAEnB,GAD2B;AAElCkC,MAAAA,GAAG,EAAEpB,IAAI,GAAC,UAFwB;AAGlCJ,MAAAA,aAAa,EAAExC;AAHmB,KAApB,CAAf;;AAMA,QAAI+F,OAAO,GAAG,UAASC,GAAT,EAAc;AAC3BlE,MAAAA,GAAG,GAAGc,IAAI,GAAC,MAAL,GAAYpC,GAAG,CAAC,EAAEgD,UAAH,CAArB;AAEA,UAAI,CAACe,IAAI,CAACmB,QAAV,EAAoB,OAAO,KAAP;;AAEpB,UAAIjC,WAAJ,EAAiB;AAChBuC,QAAAA,GAAG,GAAGA,GAAG,CAACrF,KAAJ,CAAU8C,WAAV,CAAN;AACAA,QAAAA,WAAW,GAAG,CAAd;AACA,YAAI,CAACuC,GAAG,CAACpF,MAAT,EAAiB,OAAO,IAAP;AACjB;;AAED,UAAIoF,GAAG,CAACpF,MAAJ,GAAa2D,IAAI,CAACmB,QAAtB,EAAgCM,GAAG,GAAGA,GAAG,CAACrF,KAAJ,CAAU,CAAV,EAAa4D,IAAI,CAACmB,QAAlB,CAAN;AAEhCnB,MAAAA,IAAI,CAACmB,QAAL,IAAiBM,GAAG,CAACpF,MAArB;;AACA2D,MAAAA,IAAI,CAAC0B,MAAL,CAAY,CAAC1B,IAAI,CAACL,IAAL,CAAU8B,GAAV,CAAb;;AAEA,aAAO,CAAC,CAACzB,IAAI,CAACmB,QAAd;AACA,KAjBD;;AAmBA,SAAKG,OAAL,CAAa5B,EAAb,CAAgB,MAAhB,EAAwB,UAAS/D,IAAT,EAAe;AACtC,aAAOA,IAAI,CAAC4B,GAAL,GAAWA,GAAlB,EAAuB;AACtB,YAAI,CAACiE,OAAO,CAACrE,KAAD,CAAZ,EAAqB;AACrB;;AAEDqE,MAAAA,OAAO,CAAC7F,IAAI,CAACuE,KAAN,CAAP;AACA,KAND;;AAQA,SAAKoB,OAAL,CAAa5B,EAAb,CAAgB,OAAhB,EAAyB,UAASxB,GAAT,EAAc;AACtC8B,MAAAA,IAAI,CAACa,IAAL,CAAU,OAAV,EAAmB3C,GAAnB;AACA,KAFD;;AAIA,SAAKoD,OAAL,CAAa5B,EAAb,CAAgB,KAAhB,EAAuB,YAAW;AACjCM,MAAAA,IAAI,CAACL,IAAL,CAAU,IAAV;AACA,KAFD;;AAIAxE,IAAAA,QAAQ,CAAC2D,IAAT,CAAc,IAAd;AACA,GAzDD;;AA2DAzD,EAAAA,IAAI,CAAC0D,QAAL,CAAcmC,UAAd,EAA0B/F,QAA1B;;AAEA+F,EAAAA,UAAU,CAAClC,SAAX,CAAqB0B,OAArB,GAA+B,YAAW;AACzC,QAAI,KAAK9B,UAAT,EAAqB;AACrB,SAAKA,UAAL,GAAkB,IAAlB;;AACA,SAAK0C,OAAL,CAAaZ,OAAb;;AACAC,IAAAA,OAAO,CAACC,QAAR,CAAiB,KAAKC,IAAL,CAAUC,IAAV,CAAe,IAAf,EAAqB,OAArB,CAAjB;AACA,GALD;;AAOAI,EAAAA,UAAU,CAAClC,SAAX,CAAqB0C,MAArB,GAA8B,UAASC,MAAT,EAAiB;AAC9C,QAAI,KAAKN,OAAL,KAAiBM,MAArB,EAA6B;AAC7B,SAAKN,OAAL,GAAeM,MAAf;AACA,QAAI,KAAKN,OAAT,EAAkB,KAAKC,OAAL,CAAaM,KAAb,GAAlB,KACK,KAAKN,OAAL,CAAaO,MAAb;AACL,GALD;;AAOAX,EAAAA,UAAU,CAAClC,SAAX,CAAqB8C,KAArB,GAA6B,YAAW;AACvC,SAAKJ,MAAL,CAAY,KAAZ;AACA,GAFD;;AAIA3E,EAAAA,KAAK,CAACgF,MAAN,GAAe,UAAS1D,IAAT,EAAeV,EAAf,EAAmB;AACjCA,IAAAA,EAAE,GAAGrC,IAAI,CAACqC,EAAE,IAAI3B,IAAP,CAAT;AAEA,QAAIkB,KAAK,GAAG,EAAZ;AACA,QAAIqC,IAAI,GAAG1C,EAAE,CAAC2C,eAAH,CAAmB;AAC7Bd,MAAAA,KAAK,EAAEL,IAAI,GAAC,MADiB;AAE7BoB,MAAAA,GAAG,EAAEpB,IAAI,GAAC;AAFmB,KAAnB,CAAX;AAKAkB,IAAAA,IAAI,CAACG,EAAL,CAAQ,OAAR,EAAiB/B,EAAjB;AAEA4B,IAAAA,IAAI,CAACG,EAAL,CAAQ,MAAR,EAAgB,UAASnC,GAAT,EAAc;AAC7BL,MAAAA,KAAK,CAACyC,IAAN,CAAW;AAAC5D,QAAAA,IAAI,EAAC,KAAN;AAAawB,QAAAA,GAAG,EAACA;AAAjB,OAAX;AACA,KAFD;AAIAgC,IAAAA,IAAI,CAACG,EAAL,CAAQ,KAAR,EAAe,YAAW;AACzB7C,MAAAA,EAAE,CAACK,KAAH,CAASA,KAAT,EAAgBS,EAAhB;AACA,KAFD;AAGA,GAlBD;;AAoBAZ,EAAAA,KAAK,CAACsD,IAAN,GAAa,UAAShC,IAAT,EAAeV,EAAf,EAAmB;AAC/BvC,IAAAA,IAAI,CAAC4G,IAAL,CAAUnF,EAAV,EAAc;AACb6B,MAAAA,KAAK,EAAEL,IAAI,GAAC,MADC;AAEboB,MAAAA,GAAG,EAAEpB,IAAI,GAAC,UAFG;AAGbJ,MAAAA,aAAa,EAACxC;AAHD,KAAd,EAIG,UAASyC,GAAT,EAAc+D,MAAd,EAAsBR,GAAtB,EAA2B;AAC7B,UAAIvD,GAAG,IAAIA,GAAG,CAACgE,OAAJ,KAAgB,iBAA3B,EAA8C,OAAOvE,EAAE,CAAC,IAAD,EAAO,CAAP,CAAT;AAC9C,UAAIO,GAAJ,EAAS,OAAOP,EAAE,CAACO,GAAD,CAAT;AACT,UAAI+D,MAAM,CAAC7F,KAAP,CAAa,CAAb,EAAgBiC,IAAI,CAAChC,MAAL,GAAY,CAA5B,MAAmCgC,IAAI,GAAC,MAA5C,EAAoD,OAAOV,EAAE,CAAC,IAAD,EAAO,CAAP,CAAT;AAEpDA,MAAAA,EAAE,CAAC,IAAD,EAAOwE,QAAQ,CAACF,MAAM,CAAC9F,QAAP,GAAkBC,KAAlB,CAAwBiC,IAAI,CAAChC,MAAL,GAAY,CAApC,CAAD,EAAyC,EAAzC,CAAR,GAAuDW,SAAvD,GAAmEyE,GAAG,CAACpF,MAA9E,CAAF;AACA,KAVD;AAWA,GAZD;;AAcAU,EAAAA,KAAK,CAACkE,KAAN,GAAc,UAAS5C,IAAT,EAAe1C,IAAf,EAAqBmB,IAArB,EAA2Ba,EAA3B,EAA+B;AAC5C,QAAI,OAAOb,IAAP,KAAgB,UAApB,EAAgC,OAAOC,KAAK,CAACkE,KAAN,CAAY5C,IAAZ,EAAkB1C,IAAlB,EAAwB,IAAxB,EAA8BmB,IAA9B,CAAP;AAChC,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AACX,QAAI,CAACa,EAAL,EAASA,EAAE,GAAG3B,IAAL;AAET,QAAIoG,EAAE,GAAGrF,KAAK,CAACsF,iBAAN,CAAwBhE,IAAxB,EAA8BvB,IAA9B,CAAT;AAEAsF,IAAAA,EAAE,CAAC1C,EAAH,CAAM,OAAN,EAAe/B,EAAf;AACAyE,IAAAA,EAAE,CAAC1C,EAAH,CAAM,QAAN,EAAgB,YAAW;AAC1B/B,MAAAA,EAAE;AACF,KAFD;AAIAyE,IAAAA,EAAE,CAACnB,KAAH,CAAStF,IAAT;AACAyG,IAAAA,EAAE,CAAC3C,GAAH;AACA,GAdD;;AAgBA1C,EAAAA,KAAK,CAACuF,IAAN,GAAa,UAASjE,IAAT,EAAevB,IAAf,EAAqBa,EAArB,EAAyB;AACrC,QAAI,OAAOb,IAAP,KAAgB,UAApB,EAAgC,OAAOC,KAAK,CAACuF,IAAN,CAAWjE,IAAX,EAAiB,IAAjB,EAAuBvB,IAAvB,CAAP;AAChC,QAAI,CAACA,IAAL,EAAWA,IAAI,GAAG,EAAP;AAEX,QAAIyF,EAAE,GAAGxF,KAAK,CAACwE,gBAAN,CAAuBlD,IAAvB,EAA6BvB,IAA7B,CAAT;AACA,QAAI0F,IAAI,GAAG,EAAX;AAEAD,IAAAA,EAAE,CAAC7C,EAAH,CAAM,OAAN,EAAe/B,EAAf;AACA4E,IAAAA,EAAE,CAAC7C,EAAH,CAAM,MAAN,EAAc,UAAS/D,IAAT,EAAe;AAC5B6G,MAAAA,IAAI,CAAC7C,IAAL,CAAUhE,IAAV;AACA,KAFD;AAGA4G,IAAAA,EAAE,CAAC7C,EAAH,CAAM,KAAN,EAAa,YAAW;AACvB/B,MAAAA,EAAE,CAAC,IAAD,EAAO6E,IAAI,CAACnG,MAAL,KAAgB,CAAhB,GAAoBmG,IAAI,CAAC,CAAD,CAAxB,GAA8BhH,MAAM,CAACsE,MAAP,CAAc0C,IAAd,CAArC,CAAF;AACA,KAFD;AAGA,GAdD;;AAgBAzF,EAAAA,KAAK,CAACwE,gBAAN,GAAyB,UAASlD,IAAT,EAAevB,IAAf,EAAqB;AAC7C,WAAO,IAAIoE,UAAJ,CAAe7C,IAAf,EAAqBvB,IAArB,CAAP;AACA,GAFD;;AAIAC,EAAAA,KAAK,CAACsF,iBAAN,GAA0B,UAAShE,IAAT,EAAevB,IAAf,EAAqB;AAC9C,WAAO,IAAIsB,WAAJ,CAAgBC,IAAhB,EAAsBvB,IAAtB,CAAP;AACA,GAFD;;AAIA,SAAOC,KAAP;AACA,CAxWD","sourcesContent":["var Writable = require('readable-stream/writable');\nvar Readable = require('readable-stream/readable');\nvar peek = require('level-peek');\nvar util = require('util');\nvar once = require('once');\n\nvar EMPTY = new Buffer(0);\nvar ENCODER = {\n\tencode: function(data) {\n\t\treturn typeof data === 'string' ? data = new Buffer(data) : data;\n\t},\n\tdecode: function(data) {\n\t\treturn Buffer.isBuffer(data) ? data : new Buffer(data);\n\t},\n\tbuffer: true,\n\ttype: 'raw'\n};\n\nvar noop = function() {};\n\nvar pad = function(n) {\n\tn = n.toString(16);\n\treturn '00000000'.slice(0, -n.length)+n;\n};\n\nvar expand = function(buf, len) {\n\tvar tmp = new Buffer(len);\n\tbuf.copy(tmp);\n\treturn tmp;\n};\n\nmodule.exports = function(db, opts) {\n\tif (!opts) opts = {};\n\n\tvar blobs = {};\n\n\tvar blockSize = opts.blockSize || 65536;\n\tvar maxBatch = opts.batch || 100;\n\tvar blank = new Buffer(blockSize);\n\n\tdb.put('\\x00', 'ignore', noop); // memdown#12 workaround\n\n\tvar reservations = {};\n\tvar mutateBlock = function(key, offset, block, append, cb) {\n\t\tvar release = function() {\n\t\t\tif (!--reservations[key].locks) delete reservations[key];\n\t\t};\n\n\t\tvar onreservation = function(r) {\n\t\t\tr.locks++;\n\n\t\t\tif (!r.block && !offset) {\n\t\t\t\tr.block = block;\n\t\t\t\tcb(null, r.block, release);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!r.block) r.block = new Buffer(blockSize);\n\t\t\tif (r.block.length < offset + block.length) r.block = expand(r.block, offset + block.length);\n\n\t\t\tblock.copy(r.block, offset);\n\n\t\t\tif (!append && offset + block.length < r.block.length) r.block = r.block.slice(0, offset+block.length);\n\t\t\tcb(null, r.block, release);\n\t\t};\n\n\t\tif (reservations[key]) return onreservation(reservations[key]);\n\n\t\tdb.get(key, {valueEncoding:ENCODER}, function(err, block) {\n\t\t\tif (err && !err.notFound) return cb(err);\n\t\t\tif (!reservations[key]) reservations[key] = {locks:0, block:block};\n\t\t\tonreservation(reservations[key]);\n\t\t});\n\t};\n\n\tvar WriteStream = function(name, opts) {\n\t\tif (!(this instanceof WriteStream)) return new WriteStream(name, opts);\n\t\tif (!opts) opts = {};\n\n\t\tthis.name = name;\n\t\tthis.blocks = [];\n\t\tthis.batch = [];\n\t\tthis.bytesWritten = 0;\n\t\tthis.truncate = !opts.append;\n\t\tthis.append = opts.append;\n\n\t\tthis._shouldInitAppend = this.append && opts.start === undefined;\n\t\tthis._destroyed = false;\n\t\tthis._init(opts.start || 0);\n\n\t\tWritable.call(this);\n\t};\n\n\tutil.inherits(WriteStream, Writable);\n\n\tWriteStream.prototype._init = function(start) {\n\t\tthis.blockIndex = (start / blockSize) | 0;\n\t\tthis.blockOffset = start - this.blockIndex * blockSize;\n\t\tthis.blockLength = this.blockOffset;\n\t};\n\n\tWriteStream.prototype._flush = function(cb) {\n\t\tif (!this.batch.length) return cb();\n\n\t\tvar key = this.batch[this.batch.length-1].key;\n\t\tvar batch = this.batch;\n\t\tthis.batch = [];\n\n\t\tif (!this.truncate) return db.batch(batch, cb);\n\t\tthis.truncate = false;\n\t\tthis._truncate(batch, key, cb);\n\t};\n\n\tWriteStream.prototype._truncate = function(batch, key, cb) {\n\t\tcb = once(cb);\n\n\t\tvar dels = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: key,\n\t\t\tend: this.name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tdels.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdels.push.apply(dels, batch);\n\t\t\tdb.batch(dels, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._writeBlock = function(cb) {\n\t\tvar block = this.blocks.length === 1 ? this.blocks[0] : Buffer.concat(this.blocks, this.blockLength - this.blockOffset);\n\t\tvar index = this.blockIndex;\n\t\tvar offset = this.blockOffset;\n\t\tvar self = this;\n\n\t\tthis.blockOffset = 0;\n\t\tthis.blockLength = 0;\n\t\tthis.blockIndex++;\n\t\tthis.blocks = [];\n\n\t\tvar key = this.name+'\\xff'+pad(index);\n\n\t\tvar append = function(block, force, cb) {\n\t\t\tif (block.length) {\n\t\t\t\tself.batch.push({\n\t\t\t\t\ttype: 'put',\n\t\t\t\t\tkey: key,\n\t\t\t\t\tvalue: block,\n\t\t\t\t\tvalueEncoding: ENCODER\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!force && self.batch.length < maxBatch) return cb();\n\t\t\treturn self._flush(cb);\n\t\t};\n\n\t\tif (!offset && block.length === blockSize) return append(block, false, cb);\n\t\tif (!offset && !this.append) return append(block, false, cb);\n\n\t\t// partial write\n\t\tmutateBlock(key, offset, block, this.append, function(err, block, release) {\n\t\t\tif (err) return cb(err);\n\t\t\tappend(block, true, function(err) {\n\t\t\t\trelease();\n\t\t\t\tcb(err);\n\t\t\t});\n\t\t});\n\t};\n\n\tWriteStream.prototype._initAppend = function(data, enc, cb) {\n\t\tvar self = this;\n\t\tthis._shouldInitAppend = false;\n\t\tblobs.size(this.name, function(err, size) {\n\t\t\tif (err) return cb(err);\n\t\t\tself._init(size);\n\t\t\tself._write(data, enc, cb);\n\t\t});\n\t};\n\n\tWriteStream.prototype._write = function(data, enc, cb) {\n\t\tif (!data.length || this._destroyed) return cb();\n\t\tif (this._shouldInitAppend) return this._initAppend(data, enc, cb);\n\n\t\tvar self = this;\n\t\tvar overflow;\n\t\tvar free = blockSize - this.blockLength;\n\n\t\tvar done = function(err) {\n\t\t\tif (err) return cb(err);\n\t\t\tif (overflow) return self._write(overflow, enc, cb);\n\t\t\tcb();\n\t\t};\n\n\t\tif (data.length > free) {\n\t\t\toverflow = data.slice(free);\n\t\t\tdata = data.slice(0, free);\n\t\t}\n\n\t\tthis.bytesWritten += data.length;\n\t\tthis.blockLength += data.length;\n\t\tthis.blocks.push(data);\n\n\t\tif (data.length < free) return done();\n\t\tthis._writeBlock(done);\n\t};\n\n\tWriteStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tWriteStream.prototype.end = function(data) {\n\t\tvar self = this;\n\t\tvar args = arguments;\n\n\t\tif (data && typeof data !== 'function') {\n\t\t\tthis.write(data);\n\t\t\tdata = EMPTY;\n\t\t}\n\n\t\tthis.write(EMPTY, function() {\n\t\t\tself._writeBlock(function(err) {\n\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\tself._flush(function(err) {\n\t\t\t\t\tif (err) return self.emit('error', err);\n\t\t\t\t\tWritable.prototype.end.apply(self, args);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t};\n\n\tvar ReadStream = function(name, opts) {\n\t\tif (!opts) opts = {};\n\n\t\tvar self = this;\n\n\t\tvar start = opts.start || 0;\n\t\tvar blockIndex = (start / blockSize) | 0;\n\t\tvar blockOffset = start - blockIndex * blockSize;\n\t\tvar key = name+'\\xff'+pad(blockIndex);\n\n\t\tthis.name = name;\n\t\tthis._missing = (typeof opts.end === 'number' ? opts.end : Infinity) - start + 1;\n\t\tthis._paused = false;\n\t\tthis._destroyed = false;\n\n\t\tthis._reader = db.createReadStream({\n\t\t\tstart: key,\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding: ENCODER\n\t\t});\n\n\t\tvar onblock = function(val) {\n\t\t\tkey = name+'\\xff'+pad(++blockIndex);\n\n\t\t\tif (!self._missing) return false;\n\n\t\t\tif (blockOffset) {\n\t\t\t\tval = val.slice(blockOffset);\n\t\t\t\tblockOffset = 0;\n\t\t\t\tif (!val.length) return true;\n\t\t\t}\n\n\t\t\tif (val.length > self._missing) val = val.slice(0, self._missing);\n\n\t\t\tself._missing -= val.length;\n\t\t\tself._pause(!self.push(val));\n\n\t\t\treturn !!self._missing;\n\t\t};\n\n\t\tthis._reader.on('data', function(data) {\n\t\t\twhile (data.key > key) {\n\t\t\t\tif (!onblock(blank)) return;\n\t\t\t}\n\n\t\t\tonblock(data.value);\n\t\t});\n\n\t\tthis._reader.on('error', function(err) {\n\t\t\tself.emit('error', err);\n\t\t});\n\n\t\tthis._reader.on('end', function() {\n\t\t\tself.push(null);\n\t\t});\n\n\t\tReadable.call(this);\n\t};\n\n\tutil.inherits(ReadStream, Readable);\n\n\tReadStream.prototype.destroy = function() {\n\t\tif (this._destroyed) return;\n\t\tthis._destroyed = true;\n\t\tthis._reader.destroy();\n\t\tprocess.nextTick(this.emit.bind(this, 'close'));\n\t};\n\n\tReadStream.prototype._pause = function(paused) {\n\t\tif (this._paused === paused) return;\n\t\tthis._paused = paused;\n\t\tif (this._paused) this._reader.pause();\n\t\telse this._reader.resume();\n\t};\n\n\tReadStream.prototype._read = function() {\n\t\tthis._pause(false);\n\t};\n\n\tblobs.remove = function(name, cb) {\n\t\tcb = once(cb || noop);\n\n\t\tvar batch = [];\n\t\tvar keys = db.createKeyStream({\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff'\n\t\t});\n\n\t\tkeys.on('error', cb);\n\n\t\tkeys.on('data', function(key) {\n\t\t\tbatch.push({type:'del', key:key});\n\t\t});\n\n\t\tkeys.on('end', function() {\n\t\t\tdb.batch(batch, cb);\n\t\t});\n\t};\n\n\tblobs.size = function(name, cb) {\n\t\tpeek.last(db, {\n\t\t\tstart: name+'\\xff',\n\t\t\tend: name+'\\xff\\xff',\n\t\t\tvalueEncoding:ENCODER\n\t\t}, function(err, latest, val) {\n\t\t\tif (err && err.message === 'range not found') return cb(null, 0);\n\t\t\tif (err) return cb(err);\n\t\t\tif (latest.slice(0, name.length+1) !== name+'\\xff') return cb(null, 0);\n\n\t\t\tcb(null, parseInt(latest.toString().slice(name.length+1), 16) * blockSize + val.length);\n\t\t});\n\t};\n\n\tblobs.write = function(name, data, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.write(name, data, null, opts);\n\t\tif (!opts) opts = {};\n\t\tif (!cb) cb = noop;\n\n\t\tvar ws = blobs.createWriteStream(name, opts);\n\n\t\tws.on('error', cb);\n\t\tws.on('finish', function() {\n\t\t\tcb();\n\t\t});\n\n\t\tws.write(data);\n\t\tws.end();\n\t}\n\n\tblobs.read = function(name, opts, cb) {\n\t\tif (typeof opts === 'function') return blobs.read(name, null, opts);\n\t\tif (!opts) opts = {};\n\n\t\tvar rs = blobs.createReadStream(name, opts);\n\t\tvar list = [];\n\n\t\trs.on('error', cb);\n\t\trs.on('data', function(data) {\n\t\t\tlist.push(data);\n\t\t});\n\t\trs.on('end', function() {\n\t\t\tcb(null, list.length === 1 ? list[0] : Buffer.concat(list));\n\t\t});\n\t};\n\n\tblobs.createReadStream = function(name, opts) {\n\t\treturn new ReadStream(name, opts);\n\t};\n\n\tblobs.createWriteStream = function(name, opts) {\n\t\treturn new WriteStream(name, opts);\n\t};\n\n\treturn blobs;\n};"]},"metadata":{},"sourceType":"script"}